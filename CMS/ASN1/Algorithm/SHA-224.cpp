#include "StdAfx.h"
#include "SHA-224.h"

unsigned	int		SHA224::oid[] = {2,16,840,1,101,3,4,2,4};

//==============================================================
//			コンストラクタ
//--------------------------------------------------------------
//	●引数
//			無し
//	●返値
//			無し
//==============================================================
SHA224::SHA224(const char _strName[]):
	SHA256(_strName)
{
	Set_oid(oid,sizeof(oid)/sizeof(int));
	Set_SHA224();
}
//==============================================================
//			デストラクタ
//--------------------------------------------------------------
//	●引数
//			無し
//	●返値
//			無し
//==============================================================
SHA224::~SHA224(void)
{
}
//==============================================================
//		ASN.1構造体の設定
//--------------------------------------------------------------
//	●引数
//			無し
//	●返値
//			無し
//==============================================================
void	SHA224::Set_SHA224(void)
{
	szHash = SHA224_HashSize;

	//ASN.1の定義
	Set();
//	Set_Construct(&null);
}
//==============================================================
//			初期化
//--------------------------------------------------------------
//	●引数
//			無し
//	●返値
//			無し
//==============================================================
void	SHA224::init(void)
{
	iCountBlock = 0;
	H[0] = 0xC1059ED8;
	H[1] = 0x367CD507;
	H[2] = 0x3070DD17;
	H[3] = 0xF70E5939;
	H[4] = 0xFFC00B31;
	H[5] = 0x68581511;
	H[6] = 0x64F98FA7;
	H[7] = 0xBEFA4FA4;
}
//==============================================================
//			ハッシュ値取得
//--------------------------------------------------------------
//	●引数
//			void *result	ハッシュ値を格納するアドレス（160bit）
//	●返値
//			無し
//==============================================================
void	SHA224::getHash(void *result)
{
				int*	ir	= (int *)result;
	unsigned	int		i	= 0;
	unsigned	int		n;

	while(i < (sizeof(H)/sizeof(int))){
		//1Byteずつ処理していたら、メモリアクセスが多くなってCPU処理にペナルティが発生する。
		n		= H[i];
		ir[i]	= ((n>>24) & 0xFF) | ((n>>8) & 0xFF00) | ((n & 0xFF00)<<8) | ((n & 0xFF)<<24);
		i++;
	}
}
