Microsoft (R) Macro Assembler Version 9.00.30729.01	    12/28/15 21:38:28
.\ASN1\Algorithm\AES_sse.asm				     Page 1 - 1


				;=======================================================================|
				;									|
				;		High speed AES encipher / decipher			|
				;			with the SSE2 and AES-NI (SIMD) code		|
				;									|
				;				Programmed by				|
				;					S.W.	( A.Watanabe )		|
				;									|
				;=======================================================================|

				;=======================================================================|
				;__m128i  __fastcall	AES_NI_KeyExpansion128(unsigned int *ptrKs, unsigned char *key);
				;__m128i  __fastcall	AES_NI_KeyExpansion192(unsigned int *ptrKs, unsigned char *key);
				;__m128i  __fastcall	AES_NI_KeyExpansion256(unsigned int *ptrKs, unsigned char *key);
				;-----------------------------------------------------------------------|
				;*Contents								|
				;	Key Expansion							|
				;*Input									|
				;	ecx	unsigned int	*ptrKs	Pointer of Key schedule		|
				;*Output								|
				;	none								|
				;*Break									|
				;	eax, ecx, edx							|
				;	xmm0〜7   (all SIMD Register)					|
				;=======================================================================|
				;__m128i  __fastcall	AES_SSE_Cipher(unsigned char cNr,unsigned int *ptrKs, __m128i data);
				;__m128i  __fastcall	AES_NI_Cipher( unsigned char cNr,unsigned int *ptrKs, __m128i data);
				;-----------------------------------------------------------------------|
				;*Contents								|
				;	This function encrypt the Plain text of one block(16byte).	|
				;*Input									|
				;	ecx	unsigned char	cNr	Round (times)			|
				;	edx	unsigned int	*ptrKs	Pointer of Key schedule		|
				;	xmm0		__m128i	data	Plain text			|
				;*Output								|
				;	xmm0		__m128i		Cipher text			|
				;*Break									|
				;	eax, ecx, edx							|
				;	xmm1〜7   (all SIMD Register)					|
				;=======================================================================|
				;__m128i  __fastcall	AES_SSE_InvCipher(unsigned char cNr,unsigned int *ptrKs, __m128i data);
				;__m128i  __fastcall	AES_NI_InvCipher( unsigned char cNr,unsigned int *ptrKs, __m128i data);
				;-----------------------------------------------------------------------|
				;*Contents								|
				;	This function decrypt the Cipher text of one block(16byte).	|
				;*Input									|
				;	ecx	unsigned char	cNr	Round (times)			|
				;	edx	unsigned int	*ptrKs	Pointer of Key schedule		|
				;	xmm0		__m128i	data	Cipher text			|
				;*Output								|
				;	xmm0		__m128i		Plain text			|
				;*Break									|
				;	eax, ecx, edx							|
				;	xmm1〜7   (all SIMD Register)					|
				;=======================================================================|

				.586p
				.xmm
				.model	flat, stdcall

				;****************************************************************
				;*		proto type					*
				;****************************************************************
				;●外部宣言
				;printf			proto	near	C	_Format:ptr byte, var:VARARG 
				;dataPrint		proto	near	C	i:DWORD, n:PTR XMMWORD

				;これは、Ｃ言語側にある。



				;●プロトタイプ宣言
				;@AES_SSE_mul@4		proto	near	syscall		;4.2	Multiplication	(__fastcall)

				@SubWord@4		proto	near	syscall		;(__fastcall)
				@SubWord2@4		proto	near	syscall		;(__fastcall)
				@SubWord3@4		proto	near	syscall		;(__fastcall)
				@InvSubWord@4		proto	near	syscall		;(__fastcall)

				@AES_SSE_Cipher@24	proto	near	syscall		;5.1	Cipher		(__fastcall)
				;AES_SSE_SubBytes	proto	near	stdcall		;5.1.1	SubBytes
				;AES_SSE_ShiftRows	proto	near	stdcall		;5.1.2	ShiftRows
				;AES_SSE_MixColumns	proto	near	stdcall		;5.1.3	MixColumns
				;AES_SSE_AddRoundKey	proto	near	stdcall		;5.1.4	AddRoundKey

				@AES_SSE_InvCipher@24	proto	near	syscall		;5.3	InvCipher	(__fastcall)
				;AES_SSE_InvShiftRows	proto	near	stdcall		;5.3.1	InvShiftRows
				;AES_SSE_InvSubBytes	proto	near	stdcall		;5.3.2	InvSubBytes
				;AES_SSE_InvMixColumns	proto	near	stdcall		;5.3.3	InvMixColumns
				;AES_SSE_InvAddRoundKey	proto	near	stdcall		;5.3.4	InvAddRoundKey

				@AES_NI_Cipher@24	proto	near	syscall		;5.1	Cipher		(__fastcall)
				@AES_NI_InvCipher@24	proto	near	syscall		;5.3	InvCipher	(__fastcall)

				@AES_NI_KeyExpansion128@8	proto	near	syscall	;5.2	Key Expansion	(__fastcall)
				@AES_NI_KeyExpansion192@8	proto	near	syscall	;5.2	Key Expansion	(__fastcall)
				@AES_NI_KeyExpansion256@8	proto	near	syscall	;5.2	Key Expansion	(__fastcall)

				;****************************************************************
				;*		variable					*
				;****************************************************************
				;というか、メモリ上に作る定数。SSE 命令用。
 00000000			.const
					align(16)
 00000000 FF 00 00 00 FF	AES_SSE_Mask0		db	255,  0,  0,  0, 255,  0,  0,  0, 255,  0,  0,  0, 255,  0,  0,  0
	   00 00 00 FF 00
	   00 00 FF 00 00
	   00
 00000010 00 FF 00 00 00	AES_SSE_Mask1		db	  0,255,  0,  0,   0,255,  0,  0,   0,255,  0,  0,   0,255,  0,  0
	   FF 00 00 00 FF
	   00 00 00 FF 00
	   00
 00000020 00 00 FF 00 00	AES_SSE_Mask2		db	  0,  0,255,  0,   0,  0,255,  0,   0,  0,255,  0,   0,  0,255,  0
	   00 FF 00 00 00
	   FF 00 00 00 FF
	   00
 00000030 00 00 00 FF 00	AES_SSE_Mask3		db	  0,  0,  0,255,   0,  0,  0,255,   0,  0,  0,255,   0,  0,  0,255
	   00 00 FF 00 00
	   00 FF 00 00 00
	   FF

 00000040 FF FF FF FF FF	AES_KEY_Mask0		db	255,255,255,255, 255,255,255,255,   0,  0,  0,  0,   0,  0,  0,  0
	   FF FF FF 00 00
	   00 00 00 00 00
	   00
 00000050 FF FF FF FF 00	AES_KEY_Mask1		db	255,255,255,255,   0,  0,  0,  0, 255,255,255,255,   0,  0,  0,  0
	   00 00 00 FF FF
	   FF FF 00 00 00
	   00

 00000060 00FF 00FF 00FF	AES_SSE_00FF		dw	000FFh,000FFh,000FFh,000FFh, 000FFh,000FFh,000FFh,000FFh
	   00FF 00FF 00FF
	   00FF 00FF
 00000070 011B 011B 011B	AES_SSE_011B		dw	0011Bh,0011Bh,0011Bh,0011Bh, 0011Bh,0011Bh,0011Bh,0011Bh
	   011B 011B 011B
	   011B 011B
 00000080 FF00 FF00 FF00	AES_SSE_FF00		dw	0FF00h,0FF00h,0FF00h,0FF00h, 0FF00h,0FF00h,0FF00h,0FF00h
	   FF00 FF00 FF00
	   FF00 FF00

				;===============================================================|
				;	fips-197	4.2	Multiplication			|
				;---------------------------------------------------------------|
				;	●引数							|
				;		_out		計算結果を格納するxmmレジスタ	|
				;		_in		かける数のxmmレジスタ		|
				;		_n		かける数（0〜15）		|
				;	●引数							|
				;		_out		計算結果			|
				;	●使用するレジスタ	xmm4〜xmm7			|
				;		eax		ポインタ			|
				;		ebx		ポインタ			|
				;		ecx		ポインタ			|
				;		xmm5		計算結果（偶数Bytes）		|
				;		xmm4		加算値				|
				;		xmm6		加算値				|
				;		xmm7		比較用				|
				;===============================================================|
				GF2Mul	macro	_out, _in, _n

					lea	eax, XMMWORD PTR [AES_SSE_FF00]
					lea	ebx, XMMWORD PTR [AES_SSE_00FF]
					lea	ecx, XMMWORD PTR [AES_SSE_011B]

					;-------
					;x1
					movdqa	xmm6, _in
					movdqa	xmm4, _in
					pand	xmm6, XMMWORD PTR [eax]
					pand	xmm4, XMMWORD PTR [ebx]
					psrlw	xmm6, 8

				if (_n AND 01h)
					movdqa	xmm5, xmm4
					movdqa	_out, xmm6
				else
					pxor	_out, _out
					pxor	xmm5, xmm5
				endif
					;-------
					;x2
					psllw	xmm6, 1			;result <<= 1;
					movdqa	xmm7, xmm6
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

					psllw	xmm4, 1			;result <<= 1;
					movdqa	xmm7, xmm4
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

				if (_n AND 02h)
					pxor	_out, xmm6
					pxor	xmm5, xmm4
				endif

					;-------
					;x4
					psllw	xmm6, 1			;result <<= 1;
					movdqa	xmm7, xmm6
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

					psllw	xmm4, 1			;result <<= 1;
					movdqa	xmm7, xmm4
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

				if (_n AND 04h)
					pxor	_out, xmm6
					pxor	xmm5, xmm4
				endif
					;-------
					;x8
				if (_n AND 08h)
					psllw	xmm6, 1			;result <<= 1;
					movdqa	xmm7, xmm6
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

					psllw	xmm4, 1			;result <<= 1;
					movdqa	xmm7, xmm4
					pcmpgtw	xmm7, XMMWORD PTR [ebx]
					pand	xmm7, XMMWORD PTR [ecx]
					pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);

					pxor	_out, xmm6
					pxor	xmm5, xmm4
				endif
					psllw	_out, 8
					por	_out, xmm5

					endm
				;===============================================================|
				;	fips-197		SBox				|
				;---------------------------------------------------------------|
				;	●引数							|
				;		ecx		Input				|
				;	●返値							|
				;		eax		Output				|
				;	●使用するレジスタ					|
				;		eax, ebx, ecx, edx				|
				;		(*) ecx, edxレジスタは、破壊			|
				;===============================================================|
 00000090			.const
 00000090 63 7C 77 7B F2	SBox	db	063h,07ch,077h,07bh,0f2h,06bh,06fh,0c5h,030h,001h,067h,02bh,0feh,0d7h,0abh,076h
	   6B 6F C5 30 01
	   67 2B FE D7 AB
	   76
 000000A0  CA 82 C9 7D FA		db	0cah,082h,0c9h,07dh,0fah,059h,047h,0f0h,0adh,0d4h,0a2h,0afh,09ch,0a4h,072h,0c0h
	   59 47 F0 AD D4
	   A2 AF 9C A4 72
	   C0
 000000B0  B7 FD 93 26 36		db	0b7h,0fdh,093h,026h,036h,03fh,0f7h,0cch,034h,0a5h,0e5h,0f1h,071h,0d8h,031h,015h
	   3F F7 CC 34 A5
	   E5 F1 71 D8 31
	   15
 000000C0  04 C7 23 C3 18		db	004h,0c7h,023h,0c3h,018h,096h,005h,09ah,007h,012h,080h,0e2h,0ebh,027h,0b2h,075h
	   96 05 9A 07 12
	   80 E2 EB 27 B2
	   75
 000000D0  09 83 2C 1A 1B		db	009h,083h,02ch,01ah,01bh,06eh,05ah,0a0h,052h,03bh,0d6h,0b3h,029h,0e3h,02fh,084h
	   6E 5A A0 52 3B
	   D6 B3 29 E3 2F
	   84
 000000E0  53 D1 00 ED 20		db	053h,0d1h,000h,0edh,020h,0fch,0b1h,05bh,06ah,0cbh,0beh,039h,04ah,04ch,058h,0cfh
	   FC B1 5B 6A CB
	   BE 39 4A 4C 58
	   CF
 000000F0  D0 EF AA FB 43		db	0d0h,0efh,0aah,0fbh,043h,04dh,033h,085h,045h,0f9h,002h,07fh,050h,03ch,09fh,0a8h
	   4D 33 85 45 F9
	   02 7F 50 3C 9F
	   A8
 00000100  51 A3 40 8F 92		db	051h,0a3h,040h,08fh,092h,09dh,038h,0f5h,0bch,0b6h,0dah,021h,010h,0ffh,0f3h,0d2h
	   9D 38 F5 BC B6
	   DA 21 10 FF F3
	   D2
 00000110  CD 0C 13 EC 5F		db	0cdh,00ch,013h,0ech,05fh,097h,044h,017h,0c4h,0a7h,07eh,03dh,064h,05dh,019h,073h
	   97 44 17 C4 A7
	   7E 3D 64 5D 19
	   73
 00000120  60 81 4F DC 22		db	060h,081h,04fh,0dch,022h,02ah,090h,088h,046h,0eeh,0b8h,014h,0deh,05eh,00bh,0dbh
	   2A 90 88 46 EE
	   B8 14 DE 5E 0B
	   DB
 00000130  E0 32 3A 0A 49		db	0e0h,032h,03ah,00ah,049h,006h,024h,05ch,0c2h,0d3h,0ach,062h,091h,095h,0e4h,079h
	   06 24 5C C2 D3
	   AC 62 91 95 E4
	   79
 00000140  E7 C8 37 6D 8D		db	0e7h,0c8h,037h,06dh,08dh,0d5h,04eh,0a9h,06ch,056h,0f4h,0eah,065h,07ah,0aeh,008h
	   D5 4E A9 6C 56
	   F4 EA 65 7A AE
	   08
 00000150  BA 78 25 2E 1C		db	0bah,078h,025h,02eh,01ch,0a6h,0b4h,0c6h,0e8h,0ddh,074h,01fh,04bh,0bdh,08bh,08ah
	   A6 B4 C6 E8 DD
	   74 1F 4B BD 8B
	   8A
 00000160  70 3E B5 66 48		db	070h,03eh,0b5h,066h,048h,003h,0f6h,00eh,061h,035h,057h,0b9h,086h,0c1h,01dh,09eh
	   03 F6 0E 61 35
	   57 B9 86 C1 1D
	   9E
 00000170  E1 F8 98 11 69		db	0e1h,0f8h,098h,011h,069h,0d9h,08eh,094h,09bh,01eh,087h,0e9h,0ceh,055h,028h,0dfh
	   D9 8E 94 9B 1E
	   87 E9 CE 55 28
	   DF
 00000180  8C A1 89 0D BF		db	08ch,0a1h,089h,00dh,0bfh,0e6h,042h,068h,041h,099h,02dh,00fh,0b0h,054h,0bbh,016h
	   E6 42 68 41 99
	   2D 0F B0 54 BB
	   16
 00000000			.code
					align(16)
 00000000			@SubWord@4	proc	SYSCALL	uses	ebx
				;	ecx	data

 00000000  53		   *	    push   ebx
 00000001  8B D9			mov	ebx, ecx
 00000003  8B C1			mov	eax, ecx
 00000005  C1 EB 18			shr	ebx, 24
 00000008  C1 E8 10			shr	eax, 16
 0000000B  0F B6 93			movzx	edx, [SBox + ebx]	;[3]
	   00000090 R
 00000012  25 000000FF			and	eax, 0FFh
 00000017  C1 E2 08			shl	edx, 8
 0000001A  0F B6 80			movzx	eax, [SBox + eax]	;[2]
	   00000090 R
 00000021  0F B6 DD			movzx	ebx, ch
 00000024  0B C2			or	eax, edx
 00000026  C1 E0 08			shl	eax, 8
 00000029  0F B6 93			movzx	edx, [SBox + ebx]	;[1]
	   00000090 R
 00000030  81 E1 000000FF		and	ecx, 0FFh
 00000036  0B C2			or	eax, edx
 00000038  C1 E0 08			shl	eax, 8
 0000003B  0F B6 99			movzx	ebx, [SBox + ecx]	;[0]
	   00000090 R
 00000042  0B C3			or	eax, ebx

					ret
 00000044  5B		   *	    pop    ebx
 00000045  C3		   *	    ret    00000h
 00000046			@SubWord@4	endp
				;===============================================================|
				;	fips-197		SBox				|
				;---------------------------------------------------------------|
				;	●引数							|
				;		ecx		Input				|
				;	●返値							|
				;		eax		Output				|
				;	●使用するレジスタ					|
				;		eax, ebx, ecx, edx				|
				;		(*) ecx, edxレジスタは、破壊			|
				;===============================================================|
 00000190			.const
 00000190 C6 F8 EE F6 FF	SBox2	db	0c6h,0f8h,0eeh,0f6h,0ffh,0d6h,0deh,091h,060h,002h,0ceh,056h,0e7h,0b5h,04dh,0ech
	   D6 DE 91 60 02
	   CE 56 E7 B5 4D
	   EC
 000001A0  8F 1F 89 FA EF		db	08fh,01fh,089h,0fah,0efh,0b2h,08eh,0fbh,041h,0b3h,05fh,045h,023h,053h,0e4h,09bh
	   B2 8E FB 41 B3
	   5F 45 23 53 E4
	   9B
 000001B0  75 E1 3D 4C 6C		db	075h,0e1h,03dh,04ch,06ch,07eh,0f5h,083h,068h,051h,0d1h,0f9h,0e2h,0abh,062h,02ah
	   7E F5 83 68 51
	   D1 F9 E2 AB 62
	   2A
 000001C0  08 95 46 9D 30		db	008h,095h,046h,09dh,030h,037h,00ah,02fh,00eh,024h,01bh,0dfh,0cdh,04eh,07fh,0eah
	   37 0A 2F 0E 24
	   1B DF CD 4E 7F
	   EA
 000001D0  12 1D 58 34 36		db	012h,01dh,058h,034h,036h,0dch,0b4h,05bh,0a4h,076h,0b7h,07dh,052h,0ddh,05eh,013h
	   DC B4 5B A4 76
	   B7 7D 52 DD 5E
	   13
 000001E0  A6 B9 00 C1 40		db	0a6h,0b9h,000h,0c1h,040h,0e3h,079h,0b6h,0d4h,08dh,067h,072h,094h,098h,0b0h,085h
	   E3 79 B6 D4 8D
	   67 72 94 98 B0
	   85
 000001F0  BB C5 4F ED 86		db	0bbh,0c5h,04fh,0edh,086h,09ah,066h,011h,08ah,0e9h,004h,0feh,0a0h,078h,025h,04bh
	   9A 66 11 8A E9
	   04 FE A0 78 25
	   4B
 00000200  A2 5D 80 05 3F		db	0a2h,05dh,080h,005h,03fh,021h,070h,0f1h,063h,077h,0afh,042h,020h,0e5h,0fdh,0bfh
	   21 70 F1 63 77
	   AF 42 20 E5 FD
	   BF
 00000210  81 18 26 C3 BE		db	081h,018h,026h,0c3h,0beh,035h,088h,02eh,093h,055h,0fch,07ah,0c8h,0bah,032h,0e6h
	   35 88 2E 93 55
	   FC 7A C8 BA 32
	   E6
 00000220  C0 19 9E A3 44		db	0c0h,019h,09eh,0a3h,044h,054h,03bh,00bh,08ch,0c7h,06bh,028h,0a7h,0bch,016h,0adh
	   54 3B 0B 8C C7
	   6B 28 A7 BC 16
	   AD
 00000230  DB 64 74 14 92		db	0dbh,064h,074h,014h,092h,00ch,048h,0b8h,09fh,0bdh,043h,0c4h,039h,031h,0d3h,0f2h
	   0C 48 B8 9F BD
	   43 C4 39 31 D3
	   F2
 00000240  D5 8B 6E DA 01		db	0d5h,08bh,06eh,0dah,001h,0b1h,09ch,049h,0d8h,0ach,0f3h,0cfh,0cah,0f4h,047h,010h
	   B1 9C 49 D8 AC
	   F3 CF CA F4 47
	   10
 00000250  6F F0 4A 5C 38		db	06fh,0f0h,04ah,05ch,038h,057h,073h,097h,0cbh,0a1h,0e8h,03eh,096h,061h,00dh,00fh
	   57 73 97 CB A1
	   E8 3E 96 61 0D
	   0F
 00000260  E0 7C 71 CC 90		db	0e0h,07ch,071h,0cch,090h,006h,0f7h,01ch,0c2h,06ah,0aeh,069h,017h,099h,03ah,027h
	   06 F7 1C C2 6A
	   AE 69 17 99 3A
	   27
 00000270  D9 EB 2B 22 D2		db	0d9h,0ebh,02bh,022h,0d2h,0a9h,007h,033h,02dh,03ch,015h,0c9h,087h,0aah,050h,0a5h
	   A9 07 33 2D 3C
	   15 C9 87 AA 50
	   A5
 00000280  03 59 09 1A 65		db	003h,059h,009h,01ah,065h,0d7h,084h,0d0h,082h,029h,05ah,01eh,07bh,0a8h,06dh,02ch
	   D7 84 D0 82 29
	   5A 1E 7B A8 6D
	   2C
 00000046			.code
					align(16)
 00000050			@SubWord2@4	proc	SYSCALL	uses	ebx
				;	ecx	data

 00000050  53		   *	    push   ebx
 00000051  8B D9			mov	ebx, ecx
 00000053  8B C1			mov	eax, ecx
 00000055  C1 EB 18			shr	ebx, 24
 00000058  C1 E8 10			shr	eax, 16
 0000005B  0F B6 93			movzx	edx, [SBox2 + ebx]	;[3]
	   00000190 R
 00000062  25 000000FF			and	eax, 0FFh
 00000067  C1 E2 08			shl	edx, 8
 0000006A  0F B6 80			movzx	eax, [SBox2 + eax]	;[2]
	   00000190 R
 00000071  0F B6 DD			movzx	ebx, ch
 00000074  0B C2			or	eax, edx
 00000076  C1 E0 08			shl	eax, 8
 00000079  0F B6 93			movzx	edx, [SBox2 + ebx]	;[1]
	   00000190 R
 00000080  81 E1 000000FF		and	ecx, 0FFh
 00000086  0B C2			or	eax, edx
 00000088  C1 E0 08			shl	eax, 8
 0000008B  0F B6 99			movzx	ebx, [SBox2 + ecx]	;[0]
	   00000190 R
 00000092  0B C3			or	eax, ebx

					ret
 00000094  5B		   *	    pop    ebx
 00000095  C3		   *	    ret    00000h
 00000096			@SubWord2@4	endp
				;===============================================================|
				;	fips-197		SBox				|
				;---------------------------------------------------------------|
				;	●引数							|
				;		ecx		Input				|
				;	●返値							|
				;		eax		Output				|
				;	●使用するレジスタ					|
				;		eax, ebx, ecx, edx				|
				;		(*) ecx, edxレジスタは、破壊			|
				;===============================================================|
 00000290			.const
 00000290 A5 84 99 8D 0D	SBox3	db	0a5h,084h,099h,08dh,00dh,0bdh,0b1h,054h,050h,003h,0a9h,07dh,019h,062h,0e6h,09ah
	   BD B1 54 50 03
	   A9 7D 19 62 E6
	   9A
 000002A0  45 9D 40 87 15		db	045h,09dh,040h,087h,015h,0ebh,0c9h,00bh,0ech,067h,0fdh,0eah,0bfh,0f7h,096h,05bh
	   EB C9 0B EC 67
	   FD EA BF F7 96
	   5B
 000002B0  C2 1C AE 6A 5A		db	0c2h,01ch,0aeh,06ah,05ah,041h,002h,04fh,05ch,0f4h,034h,008h,093h,073h,053h,03fh
	   41 02 4F 5C F4
	   34 08 93 73 53
	   3F
 000002C0  0C 52 65 5E 28		db	00ch,052h,065h,05eh,028h,0a1h,00fh,0b5h,009h,036h,09bh,03dh,026h,069h,0cdh,09fh
	   A1 0F B5 09 36
	   9B 3D 26 69 CD
	   9F
 000002D0  1B 9E 74 2E 2D		db	01bh,09eh,074h,02eh,02dh,0b2h,0eeh,0fbh,0f6h,04dh,061h,0ceh,07bh,03eh,071h,097h
	   B2 EE FB F6 4D
	   61 CE 7B 3E 71
	   97
 000002E0  F5 68 00 2C 60		db	0f5h,068h,000h,02ch,060h,01fh,0c8h,0edh,0beh,046h,0d9h,04bh,0deh,0d4h,0e8h,04ah
	   1F C8 ED BE 46
	   D9 4B DE D4 E8
	   4A
 000002F0  6B 2A E5 16 C5		db	06bh,02ah,0e5h,016h,0c5h,0d7h,055h,094h,0cfh,010h,006h,081h,0f0h,044h,0bah,0e3h
	   D7 55 94 CF 10
	   06 81 F0 44 BA
	   E3
 00000300  F3 FE C0 8A AD		db	0f3h,0feh,0c0h,08ah,0adh,0bch,048h,004h,0dfh,0c1h,075h,063h,030h,01ah,00eh,06dh
	   BC 48 04 DF C1
	   75 63 30 1A 0E
	   6D
 00000310  4C 14 35 2F E1		db	04ch,014h,035h,02fh,0e1h,0a2h,0cch,039h,057h,0f2h,082h,047h,0ach,0e7h,02bh,095h
	   A2 CC 39 57 F2
	   82 47 AC E7 2B
	   95
 00000320  A0 98 D1 7F 66		db	0a0h,098h,0d1h,07fh,066h,07eh,0abh,083h,0cah,029h,0d3h,03ch,079h,0e2h,01dh,076h
	   7E AB 83 CA 29
	   D3 3C 79 E2 1D
	   76
 00000330  3B 56 4E 1E DB		db	03bh,056h,04eh,01eh,0dbh,00ah,06ch,0e4h,05dh,06eh,0efh,0a6h,0a8h,0a4h,037h,08bh
	   0A 6C E4 5D 6E
	   EF A6 A8 A4 37
	   8B
 00000340  32 43 59 B7 8C		db	032h,043h,059h,0b7h,08ch,064h,0d2h,0e0h,0b4h,0fah,007h,025h,0afh,08eh,0e9h,018h
	   64 D2 E0 B4 FA
	   07 25 AF 8E E9
	   18
 00000350  D5 88 6F 72 24		db	0d5h,088h,06fh,072h,024h,0f1h,0c7h,051h,023h,07ch,09ch,021h,0ddh,0dch,086h,085h
	   F1 C7 51 23 7C
	   9C 21 DD DC 86
	   85
 00000360  90 42 C4 AA D8		db	090h,042h,0c4h,0aah,0d8h,005h,001h,012h,0a3h,05fh,0f9h,0d0h,091h,058h,027h,0b9h
	   05 01 12 A3 5F
	   F9 D0 91 58 27
	   B9
 00000370  38 13 B3 33 BB		db	038h,013h,0b3h,033h,0bbh,070h,089h,0a7h,0b6h,022h,092h,020h,049h,0ffh,078h,07ah
	   70 89 A7 B6 22
	   92 20 49 FF 78
	   7A
 00000380  8F F8 80 17 DA		db	08fh,0f8h,080h,017h,0dah,031h,0c6h,0b8h,0c3h,0b0h,077h,011h,0cbh,0fch,0d6h,03ah
	   31 C6 B8 C3 B0
	   77 11 CB FC D6
	   3A
 00000096			.code
					align(16)
 000000A0			@SubWord3@4	proc	SYSCALL	uses	ebx
				;	ecx	data

 000000A0  53		   *	    push   ebx
 000000A1  8B D9			mov	ebx, ecx
 000000A3  8B C1			mov	eax, ecx
 000000A5  C1 EB 18			shr	ebx, 24
 000000A8  C1 E8 10			shr	eax, 16
 000000AB  0F B6 93			movzx	edx, [SBox3 + ebx]	;[3]
	   00000290 R
 000000B2  25 000000FF			and	eax, 0FFh
 000000B7  C1 E2 08			shl	edx, 8
 000000BA  0F B6 80			movzx	eax, [SBox3 + eax]	;[2]
	   00000290 R
 000000C1  0F B6 DD			movzx	ebx, ch
 000000C4  0B C2			or	eax, edx
 000000C6  C1 E0 08			shl	eax, 8
 000000C9  0F B6 93			movzx	edx, [SBox3 + ebx]	;[1]
	   00000290 R
 000000D0  81 E1 000000FF		and	ecx, 0FFh
 000000D6  0B C2			or	eax, edx
 000000D8  C1 E0 08			shl	eax, 8
 000000DB  0F B6 99			movzx	ebx, [SBox3 + ecx]	;[0]
	   00000290 R
 000000E2  0B C3			or	eax, ebx

					ret
 000000E4  5B		   *	    pop    ebx
 000000E5  C3		   *	    ret    00000h
 000000E6			@SubWord3@4	endp
				;===============================================================|
				;	fips-197		SBox				|
				;---------------------------------------------------------------|
				;	●引数							|
				;		ecx		Input				|
				;	●返値							|
				;		eax		Output				|
				;	●使用するレジスタ					|
				;		eax, ebx, ecx, edx				|
				;		(*) ecx, edxレジスタは、破壊			|
				;===============================================================|
 00000390			.const
 00000390 52 09 6A D5 30	InvSBox	db	052h,009h,06ah,0d5h,030h,036h,0a5h,038h,0bfh,040h,0a3h,09eh,081h,0f3h,0d7h,0fbh
	   36 A5 38 BF 40
	   A3 9E 81 F3 D7
	   FB
 000003A0  7C E3 39 82 9B		db	07ch,0e3h,039h,082h,09bh,02fh,0ffh,087h,034h,08eh,043h,044h,0c4h,0deh,0e9h,0cbh
	   2F FF 87 34 8E
	   43 44 C4 DE E9
	   CB
 000003B0  54 7B 94 32 A6		db	054h,07bh,094h,032h,0a6h,0c2h,023h,03dh,0eeh,04ch,095h,00bh,042h,0fah,0c3h,04eh
	   C2 23 3D EE 4C
	   95 0B 42 FA C3
	   4E
 000003C0  08 2E A1 66 28		db	008h,02eh,0a1h,066h,028h,0d9h,024h,0b2h,076h,05bh,0a2h,049h,06dh,08bh,0d1h,025h
	   D9 24 B2 76 5B
	   A2 49 6D 8B D1
	   25
 000003D0  72 F8 F6 64 86		db	072h,0f8h,0f6h,064h,086h,068h,098h,016h,0d4h,0a4h,05ch,0cch,05dh,065h,0b6h,092h
	   68 98 16 D4 A4
	   5C CC 5D 65 B6
	   92
 000003E0  6C 70 48 50 FD		db	06ch,070h,048h,050h,0fdh,0edh,0b9h,0dah,05eh,015h,046h,057h,0a7h,08dh,09dh,084h
	   ED B9 DA 5E 15
	   46 57 A7 8D 9D
	   84
 000003F0  90 D8 AB 00 8C		db	090h,0d8h,0abh,000h,08ch,0bch,0d3h,00ah,0f7h,0e4h,058h,005h,0b8h,0b3h,045h,006h
	   BC D3 0A F7 E4
	   58 05 B8 B3 45
	   06
 00000400  D0 2C 1E 8F CA		db	0d0h,02ch,01eh,08fh,0cah,03fh,00fh,002h,0c1h,0afh,0bdh,003h,001h,013h,08ah,06bh
	   3F 0F 02 C1 AF
	   BD 03 01 13 8A
	   6B
 00000410  3A 91 11 41 4F		db	03ah,091h,011h,041h,04fh,067h,0dch,0eah,097h,0f2h,0cfh,0ceh,0f0h,0b4h,0e6h,073h
	   67 DC EA 97 F2
	   CF CE F0 B4 E6
	   73
 00000420  96 AC 74 22 E7		db	096h,0ach,074h,022h,0e7h,0adh,035h,085h,0e2h,0f9h,037h,0e8h,01ch,075h,0dfh,06eh
	   AD 35 85 E2 F9
	   37 E8 1C 75 DF
	   6E
 00000430  47 F1 1A 71 1D		db	047h,0f1h,01ah,071h,01dh,029h,0c5h,089h,06fh,0b7h,062h,00eh,0aah,018h,0beh,01bh
	   29 C5 89 6F B7
	   62 0E AA 18 BE
	   1B
 00000440  FC 56 3E 4B C6		db	0fch,056h,03eh,04bh,0c6h,0d2h,079h,020h,09ah,0dbh,0c0h,0feh,078h,0cdh,05ah,0f4h
	   D2 79 20 9A DB
	   C0 FE 78 CD 5A
	   F4
 00000450  1F DD A8 33 88		db	01fh,0ddh,0a8h,033h,088h,007h,0c7h,031h,0b1h,012h,010h,059h,027h,080h,0ech,05fh
	   07 C7 31 B1 12
	   10 59 27 80 EC
	   5F
 00000460  60 51 7F A9 19		db	060h,051h,07fh,0a9h,019h,0b5h,04ah,00dh,02dh,0e5h,07ah,09fh,093h,0c9h,09ch,0efh
	   B5 4A 0D 2D E5
	   7A 9F 93 C9 9C
	   EF
 00000470  A0 E0 3B 4D AE		db	0a0h,0e0h,03bh,04dh,0aeh,02ah,0f5h,0b0h,0c8h,0ebh,0bbh,03ch,083h,053h,099h,061h
	   2A F5 B0 C8 EB
	   BB 3C 83 53 99
	   61
 00000480  17 2B 04 7E BA		db	017h,02bh,004h,07eh,0bah,077h,0d6h,026h,0e1h,069h,014h,063h,055h,021h,00ch,07dh
	   77 D6 26 E1 69
	   14 63 55 21 0C
	   7D
 000000E6			.code
					align(16)
 000000F0			@InvSubWord@4	proc	SYSCALL	uses	ebx
				;	ecx	data

 000000F0  53		   *	    push   ebx
 000000F1  8B D9			mov	ebx, ecx
 000000F3  8B C1			mov	eax, ecx
 000000F5  C1 EB 18			shr	ebx, 24
 000000F8  C1 E8 10			shr	eax, 16
 000000FB  0F B6 93			movzx	edx, [InvSBox + ebx]	;[3]
	   00000390 R
 00000102  25 000000FF			and	eax, 0FFh
 00000107  C1 E2 08			shl	edx, 8
 0000010A  0F B6 80			movzx	eax, [InvSBox + eax]	;[2]
	   00000390 R
 00000111  0F B6 DD			movzx	ebx, ch
 00000114  0B C2			or	eax, edx
 00000116  C1 E0 08			shl	eax, 8
 00000119  0F B6 93			movzx	edx, [InvSBox + ebx]	;[1]
	   00000390 R
 00000120  81 E1 000000FF		and	ecx, 0FFh
 00000126  0B C2			or	eax, edx
 00000128  C1 E0 08			shl	eax, 8
 0000012B  0F B6 99			movzx	ebx, [InvSBox + ecx]	;[0]
	   00000390 R
 00000132  0B C3			or	eax, ebx

					ret
 00000134  5B		   *	    pop    ebx
 00000135  C3		   *	    ret    00000h
 00000136			@InvSubWord@4	endp
				;===============================================================|
				;	fips-197	5.1	Cipher (SSE2)			|
				;---------------------------------------------------------------|
				;	●引数							|
				;		cl	Nr	Round				|
				;		edx	ptrKS	Pointer of Key stream		|
				;		xmm0		Plain Text			|
				;	●返値							|
				;		xmm0		Cipher Text			|
				;	●使用するレジスタ					|
				;		ebp		スタックフレーム		|
				;		eax		関数からの返り値		|
				;		ecx		関数への引数			|
				;		ebx	=  1<<4	Key Stream読み込み用のカウンタ	|
				;		edi	= cl<<4	Key Streamの最終カウンタ値	|
				;		esi	= edx	Key Streamのポインタ		|
				;		edx		関数呼び出しで破壊されるので注意|
				;===============================================================|
 00000136			.code
					align(16)
 00000140			@AES_SSE_Cipher@24	proc	SYSCALL	uses	edi esi
 00000140  57		   *	    push   edi
 00000141  56		   *	    push   esi
 00000142  0F B6 F9			movzx	edi, cl
 00000145  66| 0F 6F 25			movdqa	xmm4, XMMWORD PTR [AES_SSE_Mask0]
	   00000000 R
 0000014D  8D 72 10			lea	esi, [edx + 16]			;esi = Pointer of Key stream
 00000150  66| 0F 6F 2D			movdqa	xmm5, XMMWORD PTR [AES_SSE_Mask1]
	   00000010 R
 00000158  03 FF			add	edi, edi
 0000015A  66| 0F 6F 35			movdqa	xmm6, XMMWORD PTR [AES_SSE_Mask2]
	   00000020 R
 00000162  8D 3C FA			lea	edi, [edx + edi * 8]		;edi = Last Round's Pointer of Key stream
 00000165  66| 0F 6F 3D			movdqa	xmm7, XMMWORD PTR [AES_SSE_Mask3]
	   00000030 R

					;=======================
					;◆Round (0)
					;---------------
					;AddRoundKey()
 0000016D  66| 0F 6F 12			movdqa	xmm2, XMMWORD PTR [edx]

					;=======================
					;◆Round (1) 〜 (Nr-1)
					align(16)
					.repeat
 00000180		   *@C0001:
 00000180  66| 0F EF C2				pxor	xmm0, xmm2
				;		invoke	AES_SSE_SubBytes	;MixColumns()でやる

					;	invoke	AES_SSE_ShiftRows	;[0] 0,1,2,3
 00000184  66| 0F 70 C8				pshufd	xmm1, xmm0, 00111001b	;[1] 1,2,3,0
	   39
 00000189  66| 0F 70 D0				pshufd	xmm2, xmm0, 01001110b	;[2] 2,3,0,1
	   4E
 0000018E  66| 0F DB CD				pand	xmm1, xmm5
 00000192  66| 0F DB D6				pand	xmm2, xmm6
 00000196  66| 0F 70 D8				pshufd	xmm3, xmm0, 10010011b	;[3] 3,0,1,2
	   93
 0000019B  66| 0F DB C4				pand	xmm0, xmm4
 0000019F  66| 0F DB DF				pand	xmm3, xmm7
 000001A3  66| 0F EB CA				por	xmm1, xmm2
 000001A7  66| 0F EB C3				por	xmm0, xmm3
 000001AB  66| 0F EB C1				por	xmm0, xmm1

				;		invoke	AES_SSE_MixColumns	;(+ SubBytesを同時に。)
 000001AF  66| 0F 6F C8				movdqa	xmm1,xmm0
 000001B3  66| 0F 7E C9				movd	ecx, xmm1
						invoke	@SubWord3@4
 000001B7  E8 FFFFFEE4	   *	    call   @SubWord3@4
 000001BC  66| 0F 6E D0				movd	xmm2, eax
 000001C0  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 000001C5  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 000001CA  66| 0F 7E C9				movd	ecx, xmm1
 000001CE  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord3@4
 000001D2  E8 FFFFFEC9	   *	    call   @SubWord3@4
 000001D7  66| 0F 6E D0				movd	xmm2, eax
 000001DB  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 000001E0  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 000001E5  66| 0F 7E C9				movd	ecx, xmm1
 000001E9  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord3@4
 000001ED  E8 FFFFFEAE	   *	    call   @SubWord3@4
 000001F2  66| 0F 6E D0				movd	xmm2, eax
 000001F6  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 000001FB  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 00000200  66| 0F 7E C9				movd	ecx, xmm1
 00000204  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord3@4
 00000208  E8 FFFFFE93	   *	    call   @SubWord3@4
 0000020D  66| 0F 6E D0				movd	xmm2, eax
 00000211  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 00000216  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 0000021B  66| 0F EB CA				por	xmm1, xmm2

 0000021F  66| 0F 6F D9				movdqa	xmm3, xmm1
 00000223  66| 0F 72 D1				psrld	xmm1, 8
	   08
 00000228  66| 0F 72 F3				pslld	xmm3, 24
	   18
 0000022D  66| 0F EB D9				por	xmm3, xmm1		;xmm3 = [3]

 00000231  66| 0F 6F C8				movdqa	xmm1,xmm0
 00000235  66| 0F 7E C9				movd	ecx, xmm1
						invoke	@SubWord@4
 00000239  E8 FFFFFDC2	   *	    call   @SubWord@4
 0000023E  66| 0F 6E D0				movd	xmm2, eax
 00000242  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 00000247  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 0000024C  66| 0F 7E C9				movd	ecx, xmm1
 00000250  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord@4
 00000254  E8 FFFFFDA7	   *	    call   @SubWord@4
 00000259  66| 0F 6E D0				movd	xmm2, eax
 0000025D  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 00000262  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 00000267  66| 0F 7E C9				movd	ecx, xmm1
 0000026B  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord@4
 0000026F  E8 FFFFFD8C	   *	    call   @SubWord@4
 00000274  66| 0F 6E D0				movd	xmm2, eax
 00000278  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 0000027D  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 00000282  66| 0F 7E C9				movd	ecx, xmm1
 00000286  66| 0F EB CA				por	xmm1, xmm2
						invoke	@SubWord@4
 0000028A  E8 FFFFFD71	   *	    call   @SubWord@4
 0000028F  66| 0F 6E D0				movd	xmm2, eax
 00000293  66| 0F 73 D9				psrldq	xmm1, 4
	   04
 00000298  66| 0F 73 FA				pslldq	xmm2, 12
	   0C
 0000029D  66| 0F EB CA				por	xmm1, xmm2

 000002A1  66| 0F 6F D1				movdqa	xmm2, xmm1
 000002A5  66| 0F 72 F1				pslld	xmm1, 16
	   10
 000002AA  66| 0F 72 D2				psrld	xmm2, 16
	   10
 000002AF  66| 0F EB CA				por	xmm1, xmm2		;xmm2 = [2]
 000002B3  66| 0F EF D9				pxor	xmm3, xmm1		;xmm3 = [2] ^ [3]

 000002B7  66| 0F 6F D1				movdqa	xmm2, xmm1
 000002BB  66| 0F 72 D1				psrld	xmm1, 8
	   08
 000002C0  66| 0F 72 F2				pslld	xmm2, 24
	   18
 000002C5  66| 0F EB CA				por	xmm1, xmm2		;xmm1 = [1]
 000002C9  66| 0F EF D9				pxor	xmm3, xmm1		;xmm1 = [1] ^ [2] ^ [3]

 000002CD  66| 0F 7E C1				movd	ecx, xmm0
						invoke	@SubWord2@4
 000002D1  E8 FFFFFD7A	   *	    call   @SubWord2@4
 000002D6  66| 0F 6E C8				movd	xmm1, eax
 000002DA  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 000002DF  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 000002E4  66| 0F 7E C1				movd	ecx, xmm0
 000002E8  66| 0F EB C1				por	xmm0, xmm1
						invoke	@SubWord2@4
 000002EC  E8 FFFFFD5F	   *	    call   @SubWord2@4
 000002F1  66| 0F 6E C8				movd	xmm1, eax
 000002F5  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 000002FA  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 000002FF  66| 0F 7E C1				movd	ecx, xmm0
 00000303  66| 0F EB C1				por	xmm0, xmm1
						invoke	@SubWord2@4
 00000307  E8 FFFFFD44	   *	    call   @SubWord2@4
 0000030C  66| 0F 6E C8				movd	xmm1, eax
 00000310  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 00000315  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 0000031A  66| 0F 7E C1				movd	ecx, xmm0
 0000031E  66| 0F EB C1				por	xmm0, xmm1
						invoke	@SubWord2@4
 00000322  E8 FFFFFD29	   *	    call   @SubWord2@4
 00000327  66| 0F 6E C8				movd	xmm1, eax
 0000032B  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 00000330  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 00000335  66| 0F EB C1				por	xmm0, xmm1

 00000339  66| 0F 6F 16				movdqa	xmm2, XMMWORD PTR [esi]
 0000033D  66| 0F EF C3				pxor	xmm0, xmm3
 00000341  83 C6 10				add	esi, 16

						;AddRoundKey()
					.until	(edi <= esi)
 00000344  3B FE	   *	    cmp    edi, esi
 00000346  0F 87 FFFFFE34  *	    ja	@C0001

					;=======================
					;◆Last Round (Nr)
 0000034C  66| 0F EF C2			pxor	xmm0, xmm2

				;	invoke	AES_SSE_SubBytes
 00000350  66| 0F 7E C1			movd	ecx, xmm0
					invoke	@SubWord@4
 00000354  E8 FFFFFCA7	   *	    call   @SubWord@4
 00000359  66| 0F 6E D0			movd	xmm2, eax
 0000035D  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 00000362  66| 0F 73 FA			pslldq	xmm2, 12
	   0C
 00000367  66| 0F 7E C1			movd	ecx, xmm0
 0000036B  66| 0F EB C2			por	xmm0, xmm2
					invoke	@SubWord@4
 0000036F  E8 FFFFFC8C	   *	    call   @SubWord@4
 00000374  66| 0F 6E D0			movd	xmm2, eax
 00000378  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 0000037D  66| 0F 73 FA			pslldq	xmm2, 12
	   0C
 00000382  66| 0F 7E C1			movd	ecx, xmm0
 00000386  66| 0F EB C2			por	xmm0, xmm2
					invoke	@SubWord@4
 0000038A  E8 FFFFFC71	   *	    call   @SubWord@4
 0000038F  66| 0F 6E D0			movd	xmm2, eax
 00000393  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 00000398  66| 0F 73 FA			pslldq	xmm2, 12
	   0C
 0000039D  66| 0F 7E C1			movd	ecx, xmm0
 000003A1  66| 0F EB C2			por	xmm0, xmm2
					invoke	@SubWord@4
 000003A5  E8 FFFFFC56	   *	    call   @SubWord@4
 000003AA  66| 0F 6E D0			movd	xmm2, eax
 000003AE  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 000003B3  66| 0F 73 FA			pslldq	xmm2, 12
	   0C
 000003B8  66| 0F EB C2			por	xmm0, xmm2

				;	invoke	AES_SSE_ShiftRows	;[0] 0,1,2,3
 000003BC  66| 0F 70 C8			pshufd	xmm1, xmm0, 00111001b	;[1] 1,2,3,0
	   39
 000003C1  66| 0F 70 D0			pshufd	xmm2, xmm0, 01001110b	;[2] 2,3,0,1
	   4E
 000003C6  66| 0F DB CD			pand	xmm1, xmm5
 000003CA  66| 0F DB D6			pand	xmm2, xmm6
 000003CE  66| 0F 70 D8			pshufd	xmm3, xmm0, 10010011b	;[3] 3,0,1,2
	   93
 000003D3  66| 0F DB C4			pand	xmm0, xmm4
 000003D7  66| 0F DB DF			pand	xmm3, xmm7
 000003DB  66| 0F EB CA			por	xmm1, xmm2
 000003DF  66| 0F EB C3			por	xmm0, xmm3
 000003E3  66| 0F 6F 16			movdqa	xmm2, XMMWORD PTR [esi]
 000003E7  66| 0F EB C1			por	xmm0, xmm1

					;AddRoundKey()
 000003EB  66| 0F EF C2			pxor	xmm0, xmm2

					ret
 000003EF  5E		   *	    pop    esi
 000003F0  5F		   *	    pop    edi
 000003F1  C3		   *	    ret    00000h
 000003F2			@AES_SSE_Cipher@24	endp
				;===============================================================|
				;	fips-197	5.3	InvCipher (SSE2)		|
				;---------------------------------------------------------------|
				;	●引数							|
				;		cl	Nr	Round				|
				;		edx	ptrKS	Pointer of Key stream		|
				;		xmm0		Cipher Text			|
				;	●返値							|
				;		xmm0		Plain Text			|
				;	●使用するレジスタ					|
				;		ebp		スタックフレーム		|
				;		eax		関数からの返り値		|
				;		ecx		関数への引数			|
				;		ebx	= cl<<4	Key Stream読み込み用のカウンタ	|
				;		esi	= edx	Key Streamのポインタ		|
				;		edx		関数呼び出しで破壊されるので注意|
				;===============================================================|
 000003F2			.code
					align(16)
 00000400			@AES_SSE_InvCipher@24	proc	SYSCALL	uses	ebx edi esi
 00000400  53		   *	    push   ebx
 00000401  57		   *	    push   edi
 00000402  56		   *	    push   esi
 00000403  0F B6 D9			movzx	ebx, cl
 00000406  8B FA			mov	edi, edx			;esi = Last
 00000408  03 DB			add	ebx, ebx
 0000040A  8D 05 00000000 R		lea	eax, XMMWORD PTR [AES_SSE_Mask0]
 00000410  8D 34 DA			lea	esi, [edx + ebx * 8]		;esi = Pointer of Key stream
 00000413  8D 0D 00000020 R		lea	ecx, XMMWORD PTR [AES_SSE_Mask2]
 00000419  66| 0F 6F 16			movdqa	xmm2, XMMWORD PTR [esi]
 0000041D  8D 1D 00000010 R		lea	ebx, XMMWORD PTR [AES_SSE_Mask1]


					;=======================
					;◆Round (Nr)
					;AddRoundKey()

 00000423  66| 0F EF C2			pxor	xmm0, xmm2
 00000427  8D 15 00000030 R		lea	edx, XMMWORD PTR [AES_SSE_Mask3]

				;	invoke	AES_SSE_InvShiftRows	;[0] 0,1,2,3
 0000042D  66| 0F 70 C8			pshufd	xmm1, xmm0, 00111001b	;[1] 1,2,3,0
	   39
 00000432  66| 0F 70 D0			pshufd	xmm2, xmm0, 01001110b	;[2] 2,3,0,1
	   4E
 00000437  66| 0F DB 0A			pand	xmm1, XMMWORD PTR [edx]
 0000043B  66| 0F DB 11			pand	xmm2, XMMWORD PTR [ecx]
 0000043F  66| 0F 70 D8			pshufd	xmm3, xmm0, 10010011b	;[3] 3,0,1,2
	   93
 00000444  66| 0F DB 00			pand	xmm0, XMMWORD PTR [eax]
 00000448  66| 0F DB 1B			pand	xmm3, XMMWORD PTR [ebx]
 0000044C  66| 0F EB CA			por	xmm1, xmm2
 00000450  66| 0F EB C3			por	xmm0, xmm3
 00000454  66| 0F EB C1			por	xmm0, xmm1

 00000458  83 EE 10			sub	esi, 16

				;	invoke	AES_SSE_InvSubBytes
 0000045B  66| 0F 7E C1			movd	ecx, xmm0
					invoke	@InvSubWord@4
 0000045F  E8 FFFFFC8C	   *	    call   @InvSubWord@4
 00000464  66| 0F 6E C8			movd	xmm1, eax
 00000468  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 0000046D  66| 0F 73 F9			pslldq	xmm1, 12
	   0C
 00000472  66| 0F 7E C1			movd	ecx, xmm0
 00000476  66| 0F EB C1			por	xmm0, xmm1
					invoke	@InvSubWord@4
 0000047A  E8 FFFFFC71	   *	    call   @InvSubWord@4
 0000047F  66| 0F 6E C8			movd	xmm1, eax
 00000483  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 00000488  66| 0F 73 F9			pslldq	xmm1, 12
	   0C
 0000048D  66| 0F 7E C1			movd	ecx, xmm0
 00000491  66| 0F EB C1			por	xmm0, xmm1
					invoke	@InvSubWord@4
 00000495  E8 FFFFFC56	   *	    call   @InvSubWord@4
 0000049A  66| 0F 6E C8			movd	xmm1, eax
 0000049E  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 000004A3  66| 0F 73 F9			pslldq	xmm1, 12
	   0C
 000004A8  66| 0F 7E C1			movd	ecx, xmm0
 000004AC  66| 0F EB C1			por	xmm0, xmm1
					invoke	@InvSubWord@4
 000004B0  E8 FFFFFC3B	   *	    call   @InvSubWord@4
 000004B5  66| 0F 6E C8			movd	xmm1, eax
 000004B9  66| 0F 73 D8			psrldq	xmm0, 4
	   04
 000004BE  66| 0F 73 F9			pslldq	xmm1, 12
	   0C
 000004C3  66| 0F 6F 16			movdqa	xmm2, XMMWORD PTR [esi]
 000004C7  66| 0F EB C1			por	xmm0, xmm1


					;=======================
					;◆Round (Nr-1) 〜 (1)
					align(16)
					.repeat
 000004D0		   *@C0003:
						;AddRoundKey()
 000004D0  66| 0F EF C2				pxor	xmm0, xmm2

					;	invoke	AES_SSE_InvMixColumns
						GF2Mul	xmm2, xmm0, 09h
			     1	
 000004D4  8D 05 00000080 R  1		lea	eax, XMMWORD PTR [AES_SSE_FF00]
 000004DA  8D 1D 00000060 R  1		lea	ebx, XMMWORD PTR [AES_SSE_00FF]
 000004E0  8D 0D 00000070 R  1		lea	ecx, XMMWORD PTR [AES_SSE_011B]
			     1	
			     1		;-------
			     1		;x1
 000004E6  66| 0F 6F F0	     1		movdqa	xmm6, xmm0
 000004EA  66| 0F 6F E0	     1		movdqa	xmm4, xmm0
 000004EE  66| 0F DB 30	     1		pand	xmm6, XMMWORD PTR [eax]
 000004F2  66| 0F DB 23	     1		pand	xmm4, XMMWORD PTR [ebx]
 000004F6  66| 0F 71 D6	     1		psrlw	xmm6, 8
	   08
			     1	
			     1	if (09h AND 01h)
 000004FB  66| 0F 6F EC	     1		movdqa	xmm5, xmm4
 000004FF  66| 0F 6F D6	     1		movdqa	xmm2, xmm6
			     1	else
			     1		pxor	xmm2, xmm2
			     1		pxor	xmm5, xmm5
			     1	endif
			     1		;-------
			     1		;x2
 00000503  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000508  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 0000050C  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000510  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000514  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000518  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 0000051D  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 00000521  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000525  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000529  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (09h AND 02h)
			     1		pxor	xmm2, xmm6
			     1		pxor	xmm5, xmm4
			     1	endif
			     1	
			     1		;-------
			     1		;x4
 0000052D  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000532  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 00000536  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000053A  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 0000053E  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000542  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 00000547  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 0000054B  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000054F  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000553  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (09h AND 04h)
			     1		pxor	xmm2, xmm6
			     1		pxor	xmm5, xmm4
			     1	endif
			     1		;-------
			     1		;x8
			     1	if (09h AND 08h)
 00000557  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 0000055C  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 00000560  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000564  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000568  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 0000056C  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 00000571  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 00000575  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000579  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 0000057D  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000581  66| 0F EF D6	     1		pxor	xmm2, xmm6
 00000585  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
 00000589  66| 0F 71 F2	     1		psllw	xmm2, 8
	   08
 0000058E  66| 0F EB D5	     1		por	xmm2, xmm5
			     1	
 00000592  66| 0F 6F DA				movdqa	xmm3, xmm2
 00000596  66| 0F 72 F2				pslld	xmm2, 8
	   08
 0000059B  66| 0F 72 D3				psrld	xmm3, 24		;//[1]
	   18
						GF2Mul	xmm1, xmm0, 0Eh
			     1	
 000005A0  8D 05 00000080 R  1		lea	eax, XMMWORD PTR [AES_SSE_FF00]
 000005A6  8D 1D 00000060 R  1		lea	ebx, XMMWORD PTR [AES_SSE_00FF]
 000005AC  8D 0D 00000070 R  1		lea	ecx, XMMWORD PTR [AES_SSE_011B]
			     1	
			     1		;-------
			     1		;x1
 000005B2  66| 0F 6F F0	     1		movdqa	xmm6, xmm0
 000005B6  66| 0F 6F E0	     1		movdqa	xmm4, xmm0
 000005BA  66| 0F DB 30	     1		pand	xmm6, XMMWORD PTR [eax]
 000005BE  66| 0F DB 23	     1		pand	xmm4, XMMWORD PTR [ebx]
 000005C2  66| 0F 71 D6	     1		psrlw	xmm6, 8
	   08
			     1	
			     1	if (0Eh AND 01h)
			     1		movdqa	xmm5, xmm4
			     1		movdqa	xmm1, xmm6
			     1	else
 000005C7  66| 0F EF C9	     1		pxor	xmm1, xmm1
 000005CB  66| 0F EF ED	     1		pxor	xmm5, xmm5
			     1	endif
			     1		;-------
			     1		;x2
 000005CF  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 000005D4  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 000005D8  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000005DC  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000005E0  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000005E4  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 000005E9  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 000005ED  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000005F1  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000005F5  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Eh AND 02h)
 000005F9  66| 0F EF CE	     1		pxor	xmm1, xmm6
 000005FD  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
			     1	
			     1		;-------
			     1		;x4
 00000601  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000606  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 0000060A  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000060E  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000612  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000616  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 0000061B  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 0000061F  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000623  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000627  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Eh AND 04h)
 0000062B  66| 0F EF CE	     1		pxor	xmm1, xmm6
 0000062F  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
			     1		;-------
			     1		;x8
			     1	if (0Eh AND 08h)
 00000633  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000638  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 0000063C  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000640  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000644  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000648  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 0000064D  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 00000651  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000655  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000659  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 0000065D  66| 0F EF CE	     1		pxor	xmm1, xmm6
 00000661  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
 00000665  66| 0F 71 F1	     1		psllw	xmm1, 8
	   08
 0000066A  66| 0F EB CD	     1		por	xmm1, xmm5
			     1	
 0000066E  66| 0F EB D3				por	xmm2, xmm3
						GF2Mul	xmm3, xmm0, 0Dh
			     1	
 00000672  8D 05 00000080 R  1		lea	eax, XMMWORD PTR [AES_SSE_FF00]
 00000678  8D 1D 00000060 R  1		lea	ebx, XMMWORD PTR [AES_SSE_00FF]
 0000067E  8D 0D 00000070 R  1		lea	ecx, XMMWORD PTR [AES_SSE_011B]
			     1	
			     1		;-------
			     1		;x1
 00000684  66| 0F 6F F0	     1		movdqa	xmm6, xmm0
 00000688  66| 0F 6F E0	     1		movdqa	xmm4, xmm0
 0000068C  66| 0F DB 30	     1		pand	xmm6, XMMWORD PTR [eax]
 00000690  66| 0F DB 23	     1		pand	xmm4, XMMWORD PTR [ebx]
 00000694  66| 0F 71 D6	     1		psrlw	xmm6, 8
	   08
			     1	
			     1	if (0Dh AND 01h)
 00000699  66| 0F 6F EC	     1		movdqa	xmm5, xmm4
 0000069D  66| 0F 6F DE	     1		movdqa	xmm3, xmm6
			     1	else
			     1		pxor	xmm3, xmm3
			     1		pxor	xmm5, xmm5
			     1	endif
			     1		;-------
			     1		;x2
 000006A1  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 000006A6  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 000006AA  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000006AE  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000006B2  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000006B6  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 000006BB  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 000006BF  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000006C3  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000006C7  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Dh AND 02h)
			     1		pxor	xmm3, xmm6
			     1		pxor	xmm5, xmm4
			     1	endif
			     1	
			     1		;-------
			     1		;x4
 000006CB  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 000006D0  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 000006D4  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000006D8  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000006DC  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000006E0  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 000006E5  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 000006E9  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000006ED  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000006F1  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Dh AND 04h)
 000006F5  66| 0F EF DE	     1		pxor	xmm3, xmm6
 000006F9  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
			     1		;-------
			     1		;x8
			     1	if (0Dh AND 08h)
 000006FD  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000702  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 00000706  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000070A  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 0000070E  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000712  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 00000717  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 0000071B  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000071F  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000723  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000727  66| 0F EF DE	     1		pxor	xmm3, xmm6
 0000072B  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
 0000072F  66| 0F 71 F3	     1		psllw	xmm3, 8
	   08
 00000734  66| 0F EB DD	     1		por	xmm3, xmm5
			     1	
 00000738  66| 0F EF CA				pxor	xmm1, xmm2
						GF2Mul	xmm0, xmm0, 0Bh
			     1	
 0000073C  8D 05 00000080 R  1		lea	eax, XMMWORD PTR [AES_SSE_FF00]
 00000742  8D 1D 00000060 R  1		lea	ebx, XMMWORD PTR [AES_SSE_00FF]
 00000748  8D 0D 00000070 R  1		lea	ecx, XMMWORD PTR [AES_SSE_011B]
			     1	
			     1		;-------
			     1		;x1
 0000074E  66| 0F 6F F0	     1		movdqa	xmm6, xmm0
 00000752  66| 0F 6F E0	     1		movdqa	xmm4, xmm0
 00000756  66| 0F DB 30	     1		pand	xmm6, XMMWORD PTR [eax]
 0000075A  66| 0F DB 23	     1		pand	xmm4, XMMWORD PTR [ebx]
 0000075E  66| 0F 71 D6	     1		psrlw	xmm6, 8
	   08
			     1	
			     1	if (0Bh AND 01h)
 00000763  66| 0F 6F EC	     1		movdqa	xmm5, xmm4
 00000767  66| 0F 6F C6	     1		movdqa	xmm0, xmm6
			     1	else
			     1		pxor	xmm0, xmm0
			     1		pxor	xmm5, xmm5
			     1	endif
			     1		;-------
			     1		;x2
 0000076B  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 00000770  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 00000774  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 00000778  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 0000077C  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 00000780  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 00000785  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 00000789  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 0000078D  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 00000791  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Bh AND 02h)
 00000795  66| 0F EF C6	     1		pxor	xmm0, xmm6
 00000799  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
			     1	
			     1		;-------
			     1		;x4
 0000079D  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 000007A2  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 000007A6  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000007AA  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000007AE  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000007B2  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 000007B7  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 000007BB  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000007BF  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000007C3  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
			     1	if (0Bh AND 04h)
			     1		pxor	xmm0, xmm6
			     1		pxor	xmm5, xmm4
			     1	endif
			     1		;-------
			     1		;x8
			     1	if (0Bh AND 08h)
 000007C7  66| 0F 71 F6	     1		psllw	xmm6, 1			;result <<= 1;
	   01
 000007CC  66| 0F 6F FE	     1		movdqa	xmm7, xmm6
 000007D0  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000007D4  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000007D8  66| 0F EF F7	     1		pxor	xmm6, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000007DC  66| 0F 71 F4	     1		psllw	xmm4, 1			;result <<= 1;
	   01
 000007E1  66| 0F 6F FC	     1		movdqa	xmm7, xmm4
 000007E5  66| 0F 65 3B	     1		pcmpgtw	xmm7, XMMWORD PTR [ebx]
 000007E9  66| 0F DB 39	     1		pand	xmm7, XMMWORD PTR [ecx]
 000007ED  66| 0F EF E7	     1		pxor	xmm4, xmm7		;result ^= ((result & 0x100)?	0x11B	: 0);
			     1	
 000007F1  66| 0F EF C6	     1		pxor	xmm0, xmm6
 000007F5  66| 0F EF EC	     1		pxor	xmm5, xmm4
			     1	endif
 000007F9  66| 0F 71 F0	     1		psllw	xmm0, 8
	   08
 000007FE  66| 0F EB C5	     1		por	xmm0, xmm5
			     1	
 00000802  66| 0F 6F D3				movdqa	xmm2, xmm3
 00000806  66| 0F 6F E0				movdqa	xmm4, xmm0
 0000080A  66| 0F 72 F2				pslld	xmm2, 16
	   10
 0000080F  66| 0F 72 D3				psrld	xmm3, 16		;//[2]
	   10
 00000814  66| 0F 72 F0				pslld	xmm0, 24
	   18
 00000819  66| 0F 72 D4				psrld	xmm4, 8
	   08
 0000081E  66| 0F EB D3				por	xmm2, xmm3
 00000822  66| 0F EB C4				por	xmm0, xmm4		;//[3]
 00000826  66| 0F EF CA				pxor	xmm1, xmm2
 0000082A  66| 0F EF C1				pxor	xmm0, xmm1

					;	invoke	AES_SSE_InvShiftRows	;[0] 0,1,2,3
 0000082E  8D 15 00000030 R			lea	edx, XMMWORD PTR [AES_SSE_Mask3]
 00000834  66| 0F 70 C8				pshufd	xmm1, xmm0, 00111001b	;[1] 1,2,3,0
	   39
 00000839  8D 0D 00000020 R			lea	ecx, XMMWORD PTR [AES_SSE_Mask2]
 0000083F  66| 0F 70 D0				pshufd	xmm2, xmm0, 01001110b	;[2] 2,3,0,1
	   4E
 00000844  8D 05 00000000 R			lea	eax, XMMWORD PTR [AES_SSE_Mask0]
 0000084A  66| 0F DB 0A				pand	xmm1, XMMWORD PTR [edx]
 0000084E  66| 0F DB 11				pand	xmm2, XMMWORD PTR [ecx]
 00000852  66| 0F 70 D8				pshufd	xmm3, xmm0, 10010011b	;[3] 3,0,1,2
	   93
 00000857  8D 1D 00000010 R			lea	ebx, XMMWORD PTR [AES_SSE_Mask1]
 0000085D  66| 0F DB 00				pand	xmm0, XMMWORD PTR [eax]
 00000861  66| 0F DB 1B				pand	xmm3, XMMWORD PTR [ebx]
 00000865  66| 0F EB CA				por	xmm1, xmm2
 00000869  66| 0F EB C3				por	xmm0, xmm3
 0000086D  66| 0F EB C1				por	xmm0, xmm1

 00000871  83 EE 10				sub	esi, 16

					;	invoke	AES_SSE_InvSubBytes
 00000874  66| 0F 7E C1				movd	ecx, xmm0
						invoke	@InvSubWord@4
 00000878  E8 FFFFF873	   *	    call   @InvSubWord@4
 0000087D  66| 0F 6E C8				movd	xmm1, eax
 00000881  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 00000886  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 0000088B  66| 0F 7E C1				movd	ecx, xmm0
 0000088F  66| 0F EB C1				por	xmm0, xmm1
						invoke	@InvSubWord@4
 00000893  E8 FFFFF858	   *	    call   @InvSubWord@4
 00000898  66| 0F 6E C8				movd	xmm1, eax
 0000089C  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 000008A1  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 000008A6  66| 0F 7E C1				movd	ecx, xmm0
 000008AA  66| 0F EB C1				por	xmm0, xmm1
						invoke	@InvSubWord@4
 000008AE  E8 FFFFF83D	   *	    call   @InvSubWord@4
 000008B3  66| 0F 6E C8				movd	xmm1, eax
 000008B7  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 000008BC  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 000008C1  66| 0F 7E C1				movd	ecx, xmm0
 000008C5  66| 0F EB C1				por	xmm0, xmm1
						invoke	@InvSubWord@4
 000008C9  E8 FFFFF822	   *	    call   @InvSubWord@4
 000008CE  66| 0F 6E C8				movd	xmm1, eax
 000008D2  66| 0F 73 D8				psrldq	xmm0, 4
	   04
 000008D7  66| 0F 73 F9				pslldq	xmm1, 12
	   0C
 000008DC  66| 0F 6F 16				movdqa	xmm2, XMMWORD PTR [esi]
 000008E0  66| 0F EB C1				por	xmm0, xmm1

					.until(edi >= esi)
 000008E4  3B FE	   *	    cmp    edi, esi
 000008E6  0F 82 FFFFFBE4  *	    jb	@C0003

					;=======================
					;◆Round (0)

					;AddRoundKey()
 000008EC  66| 0F EF C2			pxor	xmm0, xmm2

					ret
 000008F0  5E		   *	    pop    esi
 000008F1  5F		   *	    pop    edi
 000008F2  5B		   *	    pop    ebx
 000008F3  C3		   *	    ret    00000h
 000008F4			@AES_SSE_InvCipher@24	endp

				;===============================================================|
				;	fips-197	5.1	Cipher (AES-NI)			|
				;---------------------------------------------------------------|
				;	●引数							|
				;		cl	Nr	Round				|
				;		edx	ptrKS	Pointer of Key stream		|
				;		xmm0		Plain Text			|
				;	●返値							|
				;		xmm0		Cipher Text			|
				;	●使用するレジスタ					|
				;		eax		関数からの返り値		|
				;		ecx		関数への引数			|
				;		ebx	=  1<<4	Key Stream読み込み用のカウンタ	|
				;		edi	= cl<<4	Key Streamの最終カウンタ値	|
				;		esi	= edx	Key Streamのポインタ		|
				;===============================================================|
 000008F4			.code
					align(16)
 00000900			@AES_NI_Cipher@24	proc	SYSCALL	uses	ebx edi esi
 00000900  53		   *	    push   ebx
 00000901  57		   *	    push   edi
 00000902  56		   *	    push   esi
 00000903  8D 72 10			lea	esi, [edx + 16]			;esi = Pointer of Key stream

 00000906  66| 0F EF 02			pxor	xmm0, XMMWORD PTR [edx]		;w0
 0000090A  66| 0F 38 DC 06		aesenc	xmm0, XMMWORD PTR [esi]		;w1
 0000090F  0F B6 F9			movzx	edi, cl

 00000912  8D 46 10			lea	eax, [esi + 16]			;前もって、アドレスを計算しておく。
 00000915  8D 5E 20			lea	ebx, [esi + 32]			;（Core DUO, Core iシリーズの最適化）
 00000918  8D 4E 30			lea	ecx, [esi + 48]
 0000091B  03 FF			add	edi, edi
 0000091D  83 C6 40			add	esi, 64
 00000920  66| 0F 38 DC 00		aesenc	xmm0, XMMWORD PTR [eax]		;w2
 00000925  66| 0F 38 DC 03		aesenc	xmm0, XMMWORD PTR [ebx]		;w3
 0000092A  66| 0F 38 DC 01		aesenc	xmm0, XMMWORD PTR [ecx]		;w4
 0000092F  8D 3C FA			lea	edi, [edx + edi * 8]		;edi = Last Round's Pointer of Key stream

 00000932  8D 46 10			lea	eax, [esi + 16]			;前もって、アドレスを計算しておく。
 00000935  8D 5E 20			lea	ebx, [esi + 32]			;（Core DUO, Core iシリーズの最適化）
 00000938  8D 4E 30			lea	ecx, [esi + 48]
 0000093B  8D 56 40			lea	edx, [esi + 64]

 0000093E  66| 0F 38 DC 06		aesenc	xmm0, XMMWORD PTR [esi]		;w5
 00000943  66| 0F 38 DC 00		aesenc	xmm0, XMMWORD PTR [eax]		;w6
 00000948  66| 0F 38 DC 03		aesenc	xmm0, XMMWORD PTR [ebx]		;w7
 0000094D  66| 0F 38 DC 01		aesenc	xmm0, XMMWORD PTR [ecx]		;w8
 00000952  83 C6 50			add	esi, 80
 00000955  66| 0F 38 DC 02		aesenc	xmm0, XMMWORD PTR [edx]		;w9

					;=======================
					;◆Round (10) 〜 (Nr-1)
					align(16)
					.while	(edi > esi)
 00000960  EB 10	   *	    jmp    @C0005
 00000962		   *@C0006:
 00000962  8D 46 10				lea	eax, [esi + 16]			;前もって、アドレスを計算しておく。
 00000965  66| 0F 38 DC 06			aesenc	xmm0, XMMWORD PTR [esi]		;
 0000096A  66| 0F 38 DC 00			aesenc	xmm0, XMMWORD PTR [eax]		;
 0000096F  83 C6 20				add	esi, 32
					.endw
 00000972		   *@C0005:
 00000972  3B FE	   *	    cmp    edi, esi
 00000974  77 EC	   *	    ja	@C0006

					;=======================
					;◆Last Round (Nr)
 00000976  66| 0F 38 DD 06		aesenclast	xmm0, XMMWORD PTR [esi]

					ret
 0000097B  5E		   *	    pop    esi
 0000097C  5F		   *	    pop    edi
 0000097D  5B		   *	    pop    ebx
 0000097E  C3		   *	    ret    00000h
 0000097F			@AES_NI_Cipher@24	endp

				;===============================================================|
				;	fips-197	5.3	InvCipher (AES-NI)		|
				;---------------------------------------------------------------|
				;	●引数							|
				;		cl	Nr	Round				|
				;		edx	ptrKS	Pointer of Key stream		|
				;		xmm0		Cipher Text			|
				;	●返値							|
				;		xmm0		Plain Text			|
				;	●使用するレジスタ					|
				;		eax		関数からの返り値		|
				;		ecx		関数への引数			|
				;		ebx	= cl<<4	Key Stream読み込み用のカウンタ	|
				;		esi	= edx	Key Streamのポインタ		|
				;===============================================================|
 0000097F			.code
					align(16)
 00000980			@AES_NI_InvCipher@24	proc	SYSCALL	uses	ebx edi esi
 00000980  53		   *	    push   ebx
 00000981  57		   *	    push   edi
 00000982  56		   *	    push   esi
 00000983  0F B6 D9			movzx	ebx, cl
 00000986  03 DB			add	ebx, ebx
 00000988  8D 34 DA			lea	esi, [edx + ebx * 8]		;esi = Pointer of Key stream

					;=======================
					;◆Round (Nr)
 0000098B  8D 46 F0			lea	eax, [esi - 16]			;前もって、アドレスを計算しておく。
 0000098E  8D 5E E0			lea	ebx, [esi - 32]			;（Core DUO, Core iシリーズの最適化）
 00000991  8D 4E D0			lea	ecx, [esi - 48]
 00000994  8D 7E C0			lea	edi, [esi - 64]
 00000997  66| 0F EF 06			pxor	xmm0, XMMWORD PTR [esi]
 0000099B  66| 0F 38 DB 28		aesimc	xmm5, XMMWORD PTR [eax]
 000009A0  83 EE 50			sub	esi, 80
 000009A3  66| 0F 38 DB 23		aesimc	xmm4, XMMWORD PTR [ebx]
 000009A8  66| 0F 38 DE C5		aesdec	xmm0, xmm5
 000009AD  66| 0F 38 DB 19		aesimc	xmm3, XMMWORD PTR [ecx]
 000009B2  66| 0F 38 DE C4		aesdec	xmm0, xmm4
 000009B7  66| 0F 38 DB 17		aesimc	xmm2, XMMWORD PTR [edi]
 000009BC  66| 0F 38 DE C3		aesdec	xmm0, xmm3

 000009C1  8D 46 F0			lea	eax, [esi - 16]			;前もって、アドレスを計算しておく。
 000009C4  8D 5E E0			lea	ebx, [esi - 32]			;（Core DUO, Core iシリーズの最適化）
 000009C7  8D 4E D0			lea	ecx, [esi - 48]
 000009CA  8D 7E C0			lea	edi, [esi - 64]

 000009CD  66| 0F 38 DB 2E:		aesimc	xmm5, XMMWORD PTR [esi]
 000009D2  66| 0F 38 DE C2		aesdec	xmm0, xmm2
 000009D7  66| 0F 38 DB 20		aesimc	xmm4, XMMWORD PTR [eax]
 000009DC  66| 0F 38 DE C5		aesdec	xmm0, xmm5
 000009E1  66| 0F 38 DB 1B		aesimc	xmm3, XMMWORD PTR [ebx]
 000009E6  66| 0F 38 DE C4		aesdec	xmm0, xmm4
 000009EB  66| 0F 38 DB 11		aesimc	xmm2, XMMWORD PTR [ecx]
 000009F0  66| 0F 38 DE C3		aesdec	xmm0, xmm3
 000009F5  66| 0F 38 DB 0F		aesimc	xmm1, XMMWORD PTR [edi]
	   20
 000009FA  66| 0F 38 DE C2		aesdec	xmm0, xmm2
 000009FF  83 EE 50			sub	esi, 80
 00000A02  66| 0F 38 DE C1		aesdec	xmm0, xmm1

					;=======================
					;◆Round (10) 〜 (Nr-1)
					align(16)
					.while	(edx < esi)
 00000A10  EB 1A	   *	    jmp    @C0008
 00000A12		   *@C0009:
 00000A12  8D 46 F0				lea	eax, [esi - 16]		;前もって、アドレスを計算しておく。
 00000A15  66| 0F 38 DB 16			aesimc	xmm2, XMMWORD PTR [esi]
 00000A1A  66| 0F 38 DB 08			aesimc	xmm1, XMMWORD PTR [eax]
 00000A1F  66| 0F 38 DE C2			aesdec	xmm0, xmm2
 00000A24  83 EE 20				sub	esi, 32
 00000A27  66| 0F 38 DE C1			aesdec	xmm0, xmm1
					.endw
 00000A2C		   *@C0008:
 00000A2C  3B D6	   *	    cmp    edx, esi
 00000A2E  72 E2	   *	    jb	@C0009
					;=======================
					;◆Last Round (Nr)
 00000A30  66| 0F 38 DF 06		aesdeclast	xmm0, XMMWORD PTR [esi]

					ret
 00000A35  5E		   *	    pop    esi
 00000A36  5F		   *	    pop    edi
 00000A37  5B		   *	    pop    ebx
 00000A38  C3		   *	    ret    00000h
 00000A39			@AES_NI_InvCipher@24	endp

				;===============================================================|
				;	fips-197	5.2	Key Expansion (AES-NI)		|
				;---------------------------------------------------------------|
				;	●引数							|
				;		ecx	ptrKS	Pointer of Key stream		|
				;		edx	key	Pointer of Key			|
				;	●返値							|
				;		none						|
				;	●使用するレジスタ					|
				;		eax, ecx, edx	ポインタ計算用			|
				;		xmm0-7		鍵計算用			|
				;===============================================================|
 00000A39			.code
 00000A39			@AES_NI_KeyExpansion128@8	proc	SYSCALL

 00000A39  F3/ 0F 6F 0A			movdqu		xmm1, XMMWORD PTR [edx]
 00000A3D  66| 0F 7F 09			movdqa		XMMWORD PTR [ecx],xmm1

 00000A41  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 01h
	   01
 00000A47  E8 0000005E			call		AES_NI_KeyExpansion128_Sub

 00000A4C  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 02h
	   02
 00000A52  E8 00000053			call		AES_NI_KeyExpansion128_Sub

 00000A57  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 04h
	   04
 00000A5D  E8 00000048			call		AES_NI_KeyExpansion128_Sub

 00000A62  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 08h
	   08
 00000A68  E8 0000003D			call		AES_NI_KeyExpansion128_Sub

 00000A6D  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 10h
	   10
 00000A73  E8 00000032			call		AES_NI_KeyExpansion128_Sub

 00000A78  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 20h
	   20
 00000A7E  E8 00000027			call		AES_NI_KeyExpansion128_Sub

 00000A83  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 40h
	   40
 00000A89  E8 0000001C			call		AES_NI_KeyExpansion128_Sub

 00000A8E  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 80h
	   80
 00000A94  E8 00000011			call		AES_NI_KeyExpansion128_Sub

 00000A99  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 1bh
	   1B
 00000A9F  E8 00000006			call		AES_NI_KeyExpansion128_Sub

 00000AA4  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 36h
	   36:
				;	call		AES_NI_KeyExpansion128_Sub
				;
				;	ret
 00000AAA			@AES_NI_KeyExpansion128@8	endp

 00000AAA			AES_NI_KeyExpansion128_Sub	proc
 00000AAA  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000AAE  8D 49 10			lea		ecx,  XMMWORD PTR [ecx + 16]
 00000AB1  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000AB6  66| 0F 70 D2			pshufd		xmm2, xmm2, 11111111b	;3,3,3,3
	   FF
 00000ABB  66| 0F EF CB			pxor		xmm1, xmm3
 00000ABF  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000AC4  66| 0F EF CA			pxor		xmm1, xmm2
 00000AC8  66| 0F EF CB			pxor		xmm1, xmm3
 00000ACC  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000AD1  66| 0F EF CB			pxor		xmm1, xmm3
 00000AD5  66| 0F 7F 09			movdqa		XMMWORD PTR [ecx], xmm1

 00000AD9  C3				ret
 00000ADA			AES_NI_KeyExpansion128_Sub	endp

				;---------------------------------------------------------------|
 00000ADA			@AES_NI_KeyExpansion192@8	proc	SYSCALL

				;	xmm0	読み込み
				;	xmm1	読み込み
				;	xmm2	シフト用＆合成
				;	xmm3	シフト用
				;	xmm4	aeskeygenassist
				;	xmm5	一時
				;	xmm6	AES_KEY_Mask0
				;	xmm7	AES_KEY_Mask1

 00000ADA  66| 0F 6F 35			movdqa		xmm6, XMMWORD PTR [AES_KEY_Mask0]
	   00000040 R
 00000AE2  66| 0F 6F 3D			movdqa		xmm7, XMMWORD PTR [AES_KEY_Mask1]
	   00000050 R

				;	;[0]
 00000AEA  8D 42 10			lea		eax, XMMWORD PTR [edx + 16]
 00000AED  F3/ 0F 6F 02			movdqu		xmm0, XMMWORD PTR [edx]	;[0][1][2][3]
 00000AF1  F3/ 0F 6F 08			movdqu		xmm1, XMMWORD PTR [eax]	;[4][5][6][7]
 00000AF5  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0
 00000AF9  66| 0F DB CE			pand		xmm1, xmm6		;[4][5][-][-]

				;	;[1]
 00000AFD  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000B01  66| 0F 3A DF E1		aeskeygenassist	xmm4, xmm1, 01h
	   01
 00000B07  8D 41 10			lea		eax, XMMWORD PTR [ecx + 16]
 00000B0A  66| 0F 70 E4			pshufd		xmm4, xmm4, 01010101b	;1,1,1,1
	   55
 00000B0F  66| 0F 73 FA			pslldq		xmm2, 8			;  = [-][-][1][0]
	   08
 00000B14  66| 0F EF CA			pxor		xmm1, xmm2		; += [-][-][1][0]
 00000B18  66| 0F 73 FC			pslldq		xmm4, 8			;  = [-][-][s][s]
	   08
 00000B1D  66| 0F EF CC			pxor		xmm1, xmm4		; += [-][-][s][s]
 00000B21  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000B26  66| 0F EF CA			pxor		xmm1, xmm2		; += [-][-][1][1]
 00000B2A  66| 0F 7F 08			movdqa		XMMWORD PTR [eax], xmm1	;[4][5][6][7]

				;	;[2]
 00000B2E  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000B32  8D 41 20			lea		eax, XMMWORD PTR [ecx + 32]
 00000B35  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000B3A  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000B3E  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000B43  66| 0F 70 C1			pshufd		xmm0, xmm1, 11111111b	;3,3,3,3
	   FF
 00000B48  66| 0F EF D3			pxor		xmm2, xmm3
 00000B4C  66| 0F EF C2			pxor		xmm0, xmm2
 00000B50  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000B55  66| 0F EF C2			pxor		xmm0, xmm2
 00000B59  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000B5E  66| 0F EF C2			pxor		xmm0, xmm2
 00000B62  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000B67  66| 0F EF C2			pxor		xmm0, xmm2
 00000B6B  66| 0F 7F 00			movdqa		XMMWORD PTR [eax], xmm0	;[8][9][10][11]

				;	;[3]
 00000B6F  66| 0F 6F D1			movdqa		xmm2, xmm1
 00000B73  8D 41 30			lea		eax, XMMWORD PTR [ecx + 48]
 00000B76  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000B7B  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000B7F  66| 0F 3A DF C8		aeskeygenassist	xmm1, xmm0, 02h
	   02
 00000B85  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000B8A  66| 0F 70 C9			pshufd		xmm1, xmm1, 11111111b	;3,3,3,3
	   FF
 00000B8F  66| 0F EF D3			pxor		xmm2, xmm3		;[6][7][8][9]
 00000B93  66| 0F EF CA			pxor		xmm1, xmm2
 00000B97  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000B9C  66| 0F EF CA			pxor		xmm1, xmm2
 00000BA0  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000BA5  66| 0F EF CA			pxor		xmm1, xmm2
 00000BA9  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000BAE  66| 0F EF CA			pxor		xmm1, xmm2
 00000BB2  66| 0F 7F 08			movdqa		XMMWORD PTR [eax], xmm1	;[12][13][14][15]

				;	;[4]
 00000BB6  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000BBA  8D 41 40			lea		eax, XMMWORD PTR [ecx + 64]
 00000BBD  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000BC2  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000BC6  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000BCB  66| 0F 70 E1			pshufd		xmm4, xmm1, 11111111b	;[15][15][15][15]
	   FF
 00000BD0  66| 0F EF D3			pxor		xmm2, xmm3		;[10][11][12][13]
 00000BD4  66| 0F DB E6			pand		xmm4, xmm6		;[15][15][- ][- ]
 00000BD8  66| 0F 6F EA			movdqa		xmm5, xmm2		
 00000BDC  66| 0F DB EF			pand		xmm5, xmm7		;[10][- ][12][-]
 00000BE0  66| 0F 73 FD			pslldq		xmm5, 4
	   04
 00000BE5  66| 0F EF EA			pxor		xmm5, xmm2
 00000BE9  66| 0F EF EC			pxor		xmm5, xmm4
 00000BED  66| 0F 3A DF C5		aeskeygenassist	xmm0, xmm5, 04h
	   04
 00000BF3  66| 0F 70 C0			pshufd		xmm0, xmm0, 01010101b	;3,3,3,3
	   55
 00000BF8  66| 0F 73 F8			pslldq		xmm0, 8
	   08
 00000BFD  66| 0F EF C5			pxor		xmm0, xmm5
 00000C01  66| 0F 7F 00			movdqa		XMMWORD PTR [eax], xmm0	;[16][17][18][19]

				;	;[5]
 00000C05  66| 0F 6F D1			movdqa		xmm2, xmm1
 00000C09  8D 48 10			lea		ecx, XMMWORD PTR [eax + 16]
 00000C0C  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000C11  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000C15  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000C1A  66| 0F 70 C8			pshufd		xmm1, xmm0, 11111111b	;3,3,3,3
	   FF
 00000C1F  66| 0F EF D3			pxor		xmm2, xmm3
 00000C23  66| 0F EF CA			pxor		xmm1, xmm2
 00000C27  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C2C  66| 0F EF CA			pxor		xmm1, xmm2
 00000C30  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C35  66| 0F EF CA			pxor		xmm1, xmm2
 00000C39  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C3E  66| 0F EF CA			pxor		xmm1, xmm2
 00000C42  66| 0F 7F 09			movdqa		XMMWORD PTR [ecx], xmm1	;[20][21][22][23]

				;	;[6]
 00000C46  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000C4A  8D 48 20			lea		ecx, XMMWORD PTR [eax + 32]
 00000C4D  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000C52  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000C56  66| 0F 3A DF C1		aeskeygenassist	xmm0, xmm1, 08h
	   08
 00000C5C  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000C61  66| 0F 70 C0			pshufd		xmm0, xmm0, 11111111b	;3,3,3,3
	   FF
 00000C66  66| 0F EF D3			pxor		xmm2, xmm3
 00000C6A  66| 0F EF C2			pxor		xmm0, xmm2
 00000C6E  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C73  66| 0F EF C2			pxor		xmm0, xmm2
 00000C77  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C7C  66| 0F EF C2			pxor		xmm0, xmm2
 00000C80  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000C85  66| 0F EF C2			pxor		xmm0, xmm2
 00000C89  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0	;[24][25][26][27]

				;	;[7]
 00000C8D  66| 0F 6F D1			movdqa		xmm2, xmm1
 00000C91  8D 48 30			lea		ecx, XMMWORD PTR [eax + 48]
 00000C94  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000C99  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000C9D  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000CA2  66| 0F 70 E0			pshufd		xmm4, xmm0, 11111111b
	   FF
 00000CA7  66| 0F EF D3			pxor		xmm2, xmm3
 00000CAB  66| 0F DB E6			pand		xmm4, xmm6
 00000CAF  66| 0F 6F EA			movdqa		xmm5, xmm2		
 00000CB3  66| 0F DB EF			pand		xmm5, xmm7
 00000CB7  66| 0F 73 FD			pslldq		xmm5, 4
	   04
 00000CBC  66| 0F EF EA			pxor		xmm5, xmm2
 00000CC0  66| 0F EF EC			pxor		xmm5, xmm4
 00000CC4  66| 0F 3A DF CD		aeskeygenassist	xmm1, xmm5, 10h
	   10
 00000CCA  66| 0F 70 C9			pshufd		xmm1, xmm1, 01010101b	;3,3,3,3
	   55
 00000CCF  66| 0F 73 F9			pslldq		xmm1, 8
	   08
 00000CD4  66| 0F EF CD			pxor		xmm1, xmm5
 00000CD8  66| 0F 7F 09			movdqa		XMMWORD PTR [ecx], xmm1	;[28][29][30][31]

				;	;[8]
 00000CDC  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000CE0  8D 41 10			lea		eax, XMMWORD PTR [ecx + 16]
 00000CE3  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000CE8  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000CEC  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000CF1  66| 0F 70 C1			pshufd		xmm0, xmm1, 11111111b	;3,3,3,3
	   FF
 00000CF6  66| 0F EF D3			pxor		xmm2, xmm3
 00000CFA  66| 0F EF C2			pxor		xmm0, xmm2
 00000CFE  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D03  66| 0F EF C2			pxor		xmm0, xmm2
 00000D07  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D0C  66| 0F EF C2			pxor		xmm0, xmm2
 00000D10  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D15  66| 0F EF C2			pxor		xmm0, xmm2
 00000D19  66| 0F 7F 00			movdqa		XMMWORD PTR [eax], xmm0

				;	;[9]
 00000D1D  66| 0F 6F D1			movdqa		xmm2, xmm1
 00000D21  8D 41 20			lea		eax, XMMWORD PTR [ecx + 32]
 00000D24  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000D29  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000D2D  66| 0F 3A DF C8		aeskeygenassist	xmm1, xmm0, 20h
	   20
 00000D33  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000D38  66| 0F 70 C9			pshufd		xmm1, xmm1, 11111111b	;3,3,3,3
	   FF
 00000D3D  66| 0F EF D3			pxor		xmm2, xmm3
 00000D41  66| 0F EF CA			pxor		xmm1, xmm2
 00000D45  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D4A  66| 0F EF CA			pxor		xmm1, xmm2
 00000D4E  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D53  66| 0F EF CA			pxor		xmm1, xmm2
 00000D57  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000D5C  66| 0F EF CA			pxor		xmm1, xmm2
 00000D60  66| 0F 7F 08			movdqa		XMMWORD PTR [eax], xmm1

				;	;[10]
 00000D64  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000D68  8D 41 30			lea		eax, XMMWORD PTR [ecx + 48]
 00000D6B  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000D70  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000D74  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000D79  66| 0F 70 E1			pshufd		xmm4, xmm1, 11111111b
	   FF
 00000D7E  66| 0F EF D3			pxor		xmm2, xmm3
 00000D82  66| 0F DB E6			pand		xmm4, xmm6
 00000D86  66| 0F 6F EA			movdqa		xmm5, xmm2		
 00000D8A  66| 0F DB EF			pand		xmm5, xmm7
 00000D8E  66| 0F 73 FD			pslldq		xmm5, 4
	   04
 00000D93  66| 0F EF EA			pxor		xmm5, xmm2
 00000D97  66| 0F EF EC			pxor		xmm5, xmm4
 00000D9B  66| 0F 3A DF C5		aeskeygenassist	xmm0, xmm5, 40h
	   40
 00000DA1  66| 0F 70 C0			pshufd		xmm0, xmm0, 01010101b	;3,3,3,3
	   55
 00000DA6  66| 0F 73 F8			pslldq		xmm0, 8
	   08
 00000DAB  66| 0F EF C5			pxor		xmm0, xmm5
 00000DAF  66| 0F 7F 00			movdqa		XMMWORD PTR [eax], xmm0

				;	;[11]
 00000DB3  66| 0F 6F D1			movdqa		xmm2, xmm1
 00000DB7  8D 48 10			lea		ecx, XMMWORD PTR [eax + 16]
 00000DBA  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000DBF  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000DC3  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000DC8  66| 0F 70 C8			pshufd		xmm1, xmm0, 11111111b	;3,3,3,3
	   FF
 00000DCD  66| 0F EF D3			pxor		xmm2, xmm3
 00000DD1  66| 0F EF CA			pxor		xmm1, xmm2
 00000DD5  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000DDA  66| 0F EF CA			pxor		xmm1, xmm2
 00000DDE  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000DE3  66| 0F EF CA			pxor		xmm1, xmm2
 00000DE7  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000DEC  66| 0F EF CA			pxor		xmm1, xmm2
 00000DF0  66| 0F 7F 09			movdqa		XMMWORD PTR [ecx], xmm1

				;	;[12]
 00000DF4  66| 0F 6F D0			movdqa		xmm2, xmm0
 00000DF8  8D 48 20			lea		ecx, XMMWORD PTR [eax + 32]
 00000DFB  66| 0F 73 DA			psrldq		xmm2, 8
	   08
 00000E00  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000E04  66| 0F 3A DF C1		aeskeygenassist	xmm0, xmm1, 80h
	   80
 00000E0A  66| 0F 73 FB			pslldq		xmm3, 8
	   08
 00000E0F  66| 0F 70 C0			pshufd		xmm0, xmm0, 11111111b	;3,3,3,3
	   FF
 00000E14  66| 0F EF D3			pxor		xmm2, xmm3
 00000E18  66| 0F EF C2			pxor		xmm0, xmm2
 00000E1C  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000E21  66| 0F EF C2			pxor		xmm0, xmm2
 00000E25  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000E2A  66| 0F EF C2			pxor		xmm0, xmm2
 00000E2E  66| 0F 73 FA			pslldq		xmm2, 4
	   04
 00000E33  66| 0F EF C2			pxor		xmm0, xmm2
 00000E37  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0

 00000E3B  C3				ret
 00000E3C			@AES_NI_KeyExpansion192@8	endp
				;---------------------------------------------------------------|
 00000E3C			@AES_NI_KeyExpansion256@8	proc	SYSCALL

 00000E3C  8D 42 10			lea		eax, XMMWORD PTR [edx + 16]
 00000E3F  F3/ 0F 6F 02			movdqu		xmm0, XMMWORD PTR [edx]
 00000E43  F3/ 0F 6F 08			movdqu		xmm1, XMMWORD PTR [eax]

 00000E47  8D 41 10			lea		eax, XMMWORD PTR [ecx + 16]
 00000E4A  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0
 00000E4E  66| 0F 7F 08			movdqa		XMMWORD PTR [eax], xmm1

 00000E52  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 01h
	   01
 00000E58  E8 0000006D			call		AES_NI_KeyExpansion256_Sub

 00000E5D  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 02h
	   02
 00000E63  E8 00000062			call		AES_NI_KeyExpansion256_Sub

 00000E68  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 04h
	   04
 00000E6E  E8 00000057			call		AES_NI_KeyExpansion256_Sub

 00000E73  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 08h
	   08
 00000E79  E8 0000004C			call		AES_NI_KeyExpansion256_Sub

 00000E7E  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 10h
	   10
 00000E84  E8 00000041			call		AES_NI_KeyExpansion256_Sub

 00000E89  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 20h
	   20
 00000E8F  E8 00000036			call		AES_NI_KeyExpansion256_Sub

 00000E94  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000E98  8D 49 20			lea		ecx,  XMMWORD PTR [ecx + 32]
 00000E9B  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000EA0  66| 0F 3A DF D1		aeskeygenassist	xmm2, xmm1, 40h
	   40
 00000EA6  66| 0F EF C3			pxor		xmm0, xmm3
 00000EAA  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000EAF  66| 0F 70 D2			pshufd		xmm2, xmm2, 11111111b	;3,3,3,3
	   FF
 00000EB4  66| 0F EF C3			pxor		xmm0, xmm3
 00000EB8  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000EBD  66| 0F EF C2			pxor		xmm0, xmm2
 00000EC1  66| 0F EF C3			pxor		xmm0, xmm3
 00000EC5  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0

 00000EC9  C3				ret
 00000ECA			@AES_NI_KeyExpansion256@8	endp

 00000ECA			AES_NI_KeyExpansion256_Sub	proc
 00000ECA  66| 0F 6F D8			movdqa		xmm3, xmm0
 00000ECE  8D 49 20			lea		ecx,  XMMWORD PTR [ecx + 32]
 00000ED1  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000ED6  66| 0F EF C3			pxor		xmm0, xmm3
 00000EDA  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000EDF  66| 0F 70 D2			pshufd		xmm2, xmm2, 11111111b	;3,3,3,3
	   FF
 00000EE4  66| 0F EF C3			pxor		xmm0, xmm3
 00000EE8  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000EED  66| 0F EF C2			pxor		xmm0, xmm2
 00000EF1  66| 0F EF C3			pxor		xmm0, xmm3
 00000EF5  66| 0F 7F 01			movdqa		XMMWORD PTR [ecx], xmm0

 00000EF9  66| 0F 6F D9			movdqa		xmm3, xmm1
 00000EFD  8D 51 10			lea		edx,  XMMWORD PTR [ecx + 16]
 00000F00  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000F05  66| 0F 3A DF D0		aeskeygenassist	xmm2, xmm0, 0
	   00
 00000F0B  66| 0F EF CB			pxor		xmm1, xmm3
 00000F0F  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000F14  66| 0F 70 D2			pshufd		xmm2, xmm2, 10101010b	;2,2,2,2
	   AA
 00000F19  66| 0F EF CB			pxor		xmm1, xmm3
 00000F1D  66| 0F 73 FB			pslldq		xmm3, 4
	   04
 00000F22  66| 0F EF CA			pxor		xmm1, xmm2
 00000F26  66| 0F EF CB			pxor		xmm1, xmm3
 00000F2A  66| 0F 7F 0A			movdqa		XMMWORD PTR [edx], xmm1

 00000F2E  C3				ret
 00000F2F			AES_NI_KeyExpansion256_Sub	endp

				;****************************************************************
					end
Microsoft (R) Macro Assembler Version 9.00.30729.01	    12/28/15 21:38:28
.\ASN1\Algorithm\AES_sse.asm				     Symbols 2 - 1




Macros:

                N a m e                 Type

GF2Mul . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000490 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000F2F Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@AES_NI_Cipher@24  . . . . . . .	P Near	 00000900 _TEXT	Length= 0000007F Public SYSCALL
@AES_NI_InvCipher@24 . . . . . .	P Near	 00000980 _TEXT	Length= 000000B9 Public SYSCALL
@AES_NI_KeyExpansion128@8  . . .	P Near	 00000A39 _TEXT	Length= 00000071 Public SYSCALL
@AES_NI_KeyExpansion192@8  . . .	P Near	 00000ADA _TEXT	Length= 00000362 Public SYSCALL
@AES_NI_KeyExpansion256@8  . . .	P Near	 00000E3C _TEXT	Length= 0000008E Public SYSCALL
@AES_SSE_Cipher@24 . . . . . . .	P Near	 00000140 _TEXT	Length= 000002B2 Public SYSCALL
@AES_SSE_InvCipher@24  . . . . .	P Near	 00000400 _TEXT	Length= 000004F4 Public SYSCALL
@InvSubWord@4  . . . . . . . . .	P Near	 000000F0 _TEXT	Length= 00000046 Public SYSCALL
@SubWord2@4  . . . . . . . . . .	P Near	 00000050 _TEXT	Length= 00000046 Public SYSCALL
@SubWord3@4  . . . . . . . . . .	P Near	 000000A0 _TEXT	Length= 00000046 Public SYSCALL
@SubWord@4 . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000046 Public SYSCALL
AES_NI_KeyExpansion128_Sub . . .	P Near	 00000AAA _TEXT	Length= 00000030 Public STDCALL
AES_NI_KeyExpansion256_Sub . . .	P Near	 00000ECA _TEXT	Length= 00000065 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
AES_KEY_Mask0  . . . . . . . . .	Byte	 00000040 CONST	
AES_KEY_Mask1  . . . . . . . . .	Byte	 00000050 CONST	
AES_SSE_00FF . . . . . . . . . .	Word	 00000060 CONST	
AES_SSE_011B . . . . . . . . . .	Word	 00000070 CONST	
AES_SSE_FF00 . . . . . . . . . .	Word	 00000080 CONST	
AES_SSE_Mask0  . . . . . . . . .	Byte	 00000000 CONST	
AES_SSE_Mask1  . . . . . . . . .	Byte	 00000010 CONST	
AES_SSE_Mask2  . . . . . . . . .	Byte	 00000020 CONST	
AES_SSE_Mask3  . . . . . . . . .	Byte	 00000030 CONST	
InvSBox  . . . . . . . . . . . .	Byte	 00000390 CONST	
SBox2  . . . . . . . . . . . . .	Byte	 00000190 CONST	
SBox3  . . . . . . . . . . . . .	Byte	 00000290 CONST	
SBox . . . . . . . . . . . . . .	Byte	 00000090 CONST	

	   0 Warnings
	   0 Errors
