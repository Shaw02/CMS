; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\?n????j\My Project\CMS\CMS\ASN1\Algorithm\SHA.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4SHA@@6B@					; SHA::`RTTI Complete Object Locator'
PUBLIC	??_7SHA@@6B@					; SHA::`vftable'
;	COMDAT ??_7SHA@@6B@
CONST	SEGMENT
??_7SHA@@6B@ DD	FLAT:??_R4SHA@@6B@			; SHA::`vftable'
	DD	FLAT:?encodeBER@Sequence@@UAEXXZ
	DD	FLAT:?Get_BERcode@ASN1@@UAEPBDXZ
	DD	FLAT:?Get_BERsize@ASN1@@UAEIXZ
	DD	FLAT:?init@Digest@@UAEXXZ
	DD	FLAT:?final@Digest@@UAEXPAXI@Z
	DD	FLAT:?getHash@Digest@@UAEXPAX@Z
	DD	FLAT:?calc@Digest@@UAEXPAX@Z
CONST	ENDS
;	COMDAT ??_R4SHA@@6B@
rdata$r	SEGMENT
??_R4SHA@@6B@ DD 00H					; SHA::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSHA@@@8
	DD	FLAT:??_R3SHA@@8
PUBLIC	??1SHA@@QAE@XZ					; SHA::~SHA
; Function compile flags: /Ogtpy
; File i:\ìnïîìƒéj\my project\cms\cms\asn1\algorithm\sha.cpp
;	COMDAT ??1SHA@@QAE@XZ
_TEXT	SEGMENT
??1SHA@@QAE@XZ PROC					; SHA::~SHA, COMDAT
; _this$ = esi

; 28   : 	delete	M;

  00000	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00006	57		 push	 edi
  00007	50		 push	 eax
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SHA@@6B@
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 29   : }

  00013	8d 7e 44	 lea	 edi, DWORD PTR [esi+68]
  00016	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7AlgorithmIdentifier@@6B@
  0001c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ObjectIdentifier@@6B@
  00022	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  00025	83 c4 04	 add	 esp, 4
  00028	85 c0		 test	 eax, eax
  0002a	74 09		 je	 SHORT $LN14@SHA
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00032	83 c4 04	 add	 esp, 4
$LN14@SHA:
  00035	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00038	51		 push	 ecx
  00039	c7 47 50 00 00
	00 00		 mov	 DWORD PTR [edi+80], 0
  00040	c7 47 54 00 00
	00 00		 mov	 DWORD PTR [edi+84], 0
  00047	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00053	83 c4 04	 add	 esp, 4
  00056	e8 00 00 00 00	 call	 ??1ASN1@@QAE@XZ		; ASN1::~ASN1
  0005b	8b fe		 mov	 edi, esi
  0005d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Sequence@@6B@
  00063	e8 00 00 00 00	 call	 ??1ASN1@@QAE@XZ		; ASN1::~ASN1
  00068	5f		 pop	 edi
  00069	c3		 ret	 0
??1SHA@@QAE@XZ ENDP					; SHA::~SHA
PUBLIC	??0SHA@@QAE@QBD@Z				; SHA::SHA
;	COMDAT xdata$x
; File i:\ìnïîìƒéj\my project\cms\cms\asn1\algorithm\digest.cpp
xdata$x	SEGMENT
__unwindtable$??0SHA@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHA@@QAE@QBD@Z$0
__ehfuncinfo$??0SHA@@QAE@QBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SHA@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File i:\ìnïîìƒéj\my project\cms\cms\asn1\algorithm\sha.cpp
xdata$x	ENDS
;	COMDAT ??0SHA@@QAE@QBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__strName$ = 12						; size = 4
??0SHA@@QAE@QBD@Z PROC					; SHA::SHA, COMDAT

; 14   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0SHA@@QAE@QBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	56		 push	 esi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00014	33 c4		 xor	 eax, esp
  00016	50		 push	 eax
  00017	8d 44 24 08	 lea	 eax, DWORD PTR __$EHRec$[esp+20]
  0001b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00021	8b 74 24 18	 mov	 esi, DWORD PTR _this$[esp+16]
  00025	8b 44 24 1c	 mov	 eax, DWORD PTR __strName$[esp+16]
  00029	50		 push	 eax
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ??0AlgorithmIdentifier@@QAE@QBD@Z ; AlgorithmIdentifier::AlgorithmIdentifier
  00030	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0

; 15   : 	szBlock = SHA_BlockSize;
; 16   : 	M = new unsigned char [szBlock];	//ämï€ÇÕÇ±Ç±Ç≈Ç∑ÇÈÅB

  00038	6a 40		 push	 64			; 00000040H
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SHA@@6B@
  00040	c7 86 a4 00 00
	00 40 00 00 00	 mov	 DWORD PTR [esi+164], 64	; 00000040H
  0004a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0004f	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  00055	83 c4 04	 add	 esp, 4

; 17   : }

  00058	8b c6		 mov	 eax, esi
  0005a	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5e		 pop	 esi
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SHA@@QAE@QBD@Z$0:
  00000	8b 75 04	 mov	 esi, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1Digest@@QAE@XZ	; Digest::~Digest
__ehhandler$??0SHA@@QAE@QBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SHA@@QAE@QBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SHA@@QAE@QBD@Z ENDP					; SHA::SHA
END
