; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\?n????j\My Project\CMS\CMS\ASN1\BER_Output.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4BER_Output@@6B@				; BER_Output::`RTTI Complete Object Locator'
PUBLIC	??_R3BER_Output@@8				; BER_Output::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BER_Output@@8				; BER_Output::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BER_Output@@8			; BER_Output::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBER_Output@@@8				; BER_Output `RTTI Type Descriptor'
PUBLIC	??_DBER_Output@@QAEXXZ				; BER_Output::`vbase destructor'
PUBLIC	??_GBER_Output@@UAEPAXI@Z			; BER_Output::`scalar deleting destructor'
PUBLIC	?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z ; std::basic_ostream<char,std::char_traits<char> >::write
PUBLIC	??_7BER_Output@@6B@				; BER_Output::`vftable'
PUBLIC	??_8BER_Output@@7B@				; BER_Output::`vbtable'
EXTRN	??_EBER_Output@@UAEPAXI@Z:PROC			; BER_Output::`vector deleting destructor'
;	COMDAT ??_8BER_Output@@7B@
CONST	SEGMENT
??_8BER_Output@@7B@ DD 00H				; BER_Output::`vbtable'
	DD	054H
CONST	ENDS
;	COMDAT ??_7BER_Output@@6B@
CONST	SEGMENT
??_7BER_Output@@6B@ DD FLAT:??_R4BER_Output@@6B@	; BER_Output::`vftable'
	DD	FLAT:??_EBER_Output@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4BER_Output@@6B@
rdata$r	SEGMENT
??_R4BER_Output@@6B@ DD 00H				; BER_Output::`RTTI Complete Object Locator'
	DD	054H
	DD	00H
	DD	FLAT:??_R0?AVBER_Output@@@8
	DD	FLAT:??_R3BER_Output@@8
rdata$r	ENDS
;	COMDAT ??_R3BER_Output@@8
rdata$r	SEGMENT
??_R3BER_Output@@8 DD 00H				; BER_Output::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	07H
	DD	FLAT:??_R2BER_Output@@8
rdata$r	ENDS
;	COMDAT ??_R2BER_Output@@8
rdata$r	SEGMENT
??_R2BER_Output@@8 DD FLAT:??_R1A@?0A@EA@BER_Output@@8	; BER_Output::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FileOutput@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BER_Output@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BER_Output@@8 DD FLAT:??_R0?AVBER_Output@@@8 ; BER_Output::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BER_Output@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBER_Output@@@8
_DATA	SEGMENT
??_R0?AVBER_Output@@@8 DD FLAT:??_7type_info@@6B@	; BER_Output `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBER_Output@@', 00H
PUBLIC	??1BER_Output@@UAE@XZ				; BER_Output::~BER_Output
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\ber_output.cpp
;	COMDAT ??1BER_Output@@UAE@XZ
_TEXT	SEGMENT
??1BER_Output@@UAE@XZ PROC				; BER_Output::~BER_Output, COMDAT
; _this$ = eax

; 25   : {

  00000	51		 push	 ecx
  00001	8b 48 ac	 mov	 ecx, DWORD PTR [eax-84]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 26   : }

  00007	50		 push	 eax
  00008	c7 44 02 ac 00
	00 00 00	 mov	 DWORD PTR [edx+eax-84], OFFSET ??_7BER_Output@@6B@
  00010	e8 00 00 00 00	 call	 ??1FileOutput@@UAE@XZ	; FileOutput::~FileOutput
  00015	59		 pop	 ecx
  00016	c3		 ret	 0
??1BER_Output@@UAE@XZ ENDP				; BER_Output::~BER_Output
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_DBER_Output@@QAEXXZ
_TEXT	SEGMENT
??_DBER_Output@@QAEXXZ PROC				; BER_Output::`vbase destructor', COMDAT
; _this$ = eax
  00000	56		 push	 esi
  00001	8b f0		 mov	 esi, eax
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00008	83 c6 54	 add	 esi, 84			; 00000054H
  0000b	56		 push	 esi
  0000c	c7 44 31 ac 00
	00 00 00	 mov	 DWORD PTR [ecx+esi-84], OFFSET ??_7BER_Output@@6B@
  00014	e8 00 00 00 00	 call	 ??1FileOutput@@UAE@XZ	; FileOutput::~FileOutput
  00019	56		 push	 esi
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
  00020	e8 00 00 00 00	 call	 ?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
  00025	83 c4 04	 add	 esp, 4
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??_DBER_Output@@QAEXXZ ENDP				; BER_Output::`vbase destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GBER_Output@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GBER_Output@@UAEPAXI@Z PROC				; BER_Output::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8d 79 ac	 lea	 edi, DWORD PTR [ecx-84]
  00005	8b 07		 mov	 eax, DWORD PTR [edi]
  00007	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000a	8d 77 54	 lea	 esi, DWORD PTR [edi+84]
  0000d	56		 push	 esi
  0000e	c7 44 31 ac 00
	00 00 00	 mov	 DWORD PTR [ecx+esi-84], OFFSET ??_7BER_Output@@6B@
  00016	e8 00 00 00 00	 call	 ??1FileOutput@@UAE@XZ	; FileOutput::~FileOutput
  0001b	56		 push	 esi
  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
  00022	e8 00 00 00 00	 call	 ?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
  00027	83 c4 04	 add	 esp, 4
  0002a	f6 44 24 0c 01	 test	 BYTE PTR ___flags$[esp+4], 1
  0002f	74 09		 je	 SHORT $LN14@scalar@25
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00037	83 c4 04	 add	 esp, 4
$LN14@scalar@25:
  0003a	8b c7		 mov	 eax, edi
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	c2 04 00	 ret	 4
??_GBER_Output@@UAEPAXI@Z ENDP				; BER_Output::`scalar deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$9 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$0
__tryblocktable$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$9
__ehfuncinfo$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z
	DD	01H
	DD	FLAT:__tryblocktable$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z
_TEXT	SEGMENT
__Ok$ = -28						; size = 8
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Str$ = 12						; size = 4
__State$ = 16						; size = 4
__Count$ = 16						; size = 4
?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::write, COMDAT

; 529  : 		{	// insert _Count characters from array _Str

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b 5d 10	 mov	 ebx, DWORD PTR __Count$[ebp]
  0002e	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]

; 530  : 		if (0 < _Count)
; 531  : 			_DEBUG_POINTER(_Str);
; 532  : 		ios_base::iostate _State = ios_base::goodbit;
; 533  : 		const sentry _Ok(*this);

  00031	8d 45 e4	 lea	 eax, DWORD PTR __Ok$[ebp]
  00034	33 ff		 xor	 edi, edi
  00036	50		 push	 eax
  00037	89 7d 10	 mov	 DWORD PTR __State$[ebp], edi
  0003a	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0003f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi

; 534  : 
; 535  : 		if (!_Ok)

  00042	80 7d e8 00	 cmp	 BYTE PTR __Ok$[ebp+4], 0
  00046	75 07		 jne	 SHORT $LN4@write

; 536  : 			_State |= ios_base::badbit;

  00048	bf 04 00 00 00	 mov	 edi, 4

; 537  : 		else

  0004d	eb 5f		 jmp	 SHORT $LN12@write
$LN4@write:

; 538  : 			{	// state okay, insert characters
; 539  : 			_TRY_IO_BEGIN

  0004f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 540  : 			if (_Myios::rdbuf()->sputn(_Str, _Count) != _Count)

  00053	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00055	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00058	8b 4c 32 28	 mov	 ecx, DWORD PTR [edx+esi+40]
  0005c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005e	8b 55 0c	 mov	 edx, DWORD PTR __Str$[ebp]
  00061	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00064	53		 push	 ebx
  00065	52		 push	 edx
  00066	ff d0		 call	 eax
  00068	3b c3		 cmp	 eax, ebx
  0006a	74 05		 je	 SHORT $LN1@write

; 541  : 				_State |= ios_base::badbit;

  0006c	bf 04 00 00 00	 mov	 edi, 4
$LN1@write:
  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00078	eb 34		 jmp	 SHORT $LN12@write
__catch$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$0:

; 542  : 			_CATCH_IO_END

  0007a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00082	03 c8		 add	 ecx, eax
  00084	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00087	83 c8 04	 or	 eax, 4
  0008a	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  0008e	75 03		 jne	 SHORT $LN26@write
  00090	83 c8 04	 or	 eax, 4
$LN26@write:
  00093	6a 01		 push	 1
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QAEXH_N@Z ; std::ios_base::clear
  0009b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000a2	b8 00 00 00 00	 mov	 eax, $LN61@write
  000a7	c3		 ret	 0
$LN61@write:
  000a8	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  000ab	8b 7d 10	 mov	 edi, DWORD PTR __State$[ebp]
$LN12@write:

; 543  : 			}
; 544  : 
; 545  : 		_Myios::setstate(_State);

  000ae	8b 16		 mov	 edx, DWORD PTR [esi]
  000b0	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000b3	03 ce		 add	 ecx, esi
  000b5	85 ff		 test	 edi, edi
  000b7	74 16		 je	 SHORT $LN55@write
  000b9	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000bc	0b c7		 or	 eax, edi
  000be	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  000c2	75 03		 jne	 SHORT $LN57@write
  000c4	83 c8 04	 or	 eax, 4
$LN57@write:
  000c7	6a 00		 push	 0
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QAEXH_N@Z ; std::ios_base::clear
$LN55@write:

; 546  : 		return (*this);

  000cf	8d 45 e4	 lea	 eax, DWORD PTR __Ok$[ebp]
  000d2	50		 push	 eax
  000d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000da	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  000df	8b c6		 mov	 eax, esi

; 547  : 		}

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z$2:
  00000	8d 45 e4	 lea	 eax, DWORD PTR __Ok$[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00009	c3		 ret	 0
__ehhandler$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::write
PUBLIC	?write_BERcode@BER_Output@@QAEXPBDI@Z		; BER_Output::write_BERcode
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\ber_output.cpp
;	COMDAT ?write_BERcode@BER_Output@@QAEXPBDI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?write_BERcode@BER_Output@@QAEXPBDI@Z PROC		; BER_Output::write_BERcode, COMDAT
; _strCode$ = ecx
; _szCode$ = eax

; 40   : 	write(strCode, szCode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _this$[esp-4]
  00004	50		 push	 eax
  00005	51		 push	 ecx
  00006	52		 push	 edx
  00007	e8 00 00 00 00	 call	 ?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@PBDH@Z ; std::basic_ostream<char,std::char_traits<char> >::write

; 41   : }

  0000c	c2 04 00	 ret	 4
?write_BERcode@BER_Output@@QAEXPBDI@Z ENDP		; BER_Output::write_BERcode
_TEXT	ENDS
PUBLIC	??0BER_Output@@QAE@PBD@Z			; BER_Output::BER_Output
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0BER_Output@@QAE@PBD@Z DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0BER_Output@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0BER_Output@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\ber_output.cpp
xdata$x	ENDS
;	COMDAT ??0BER_Output@@QAE@PBD@Z
_TEXT	SEGMENT
$T100304 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_strFileName$ = 12					; size = 4
??0BER_Output@@QAE@PBD@Z PROC				; BER_Output::BER_Output, COMDAT

; 14   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0BER_Output@@QAE@PBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 08	 sub	 esp, 8
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c4		 xor	 eax, esp
  00019	50		 push	 eax
  0001a	8d 44 24 10	 lea	 eax, DWORD PTR __$EHRec$[esp+28]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b 74 24 20	 mov	 esi, DWORD PTR _this$[esp+24]
  00028	8b 44 24 24	 mov	 eax, DWORD PTR _strFileName$[esp+24]
  0002c	6a 00		 push	 0
  0002e	50		 push	 eax
  0002f	56		 push	 esi
  00030	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T100304[esp+40], 0
  00038	e8 00 00 00 00	 call	 ??0FileOutput@@QAE@PBD@Z ; FileOutput::FileOutput
  0003d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	c7 04 16 00 00
	00 00		 mov	 DWORD PTR [esi+edx], OFFSET ??_7BER_Output@@6B@

; 15   : }

  00049	8b c6		 mov	 eax, esi
  0004b	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	5e		 pop	 esi
  00058	83 c4 14	 add	 esp, 20			; 00000014H
  0005b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0BER_Output@@QAE@PBD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 f4	 lea	 eax, DWORD PTR [edx-12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0BER_Output@@QAE@PBD@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0BER_Output@@QAE@PBD@Z ENDP				; BER_Output::BER_Output
END
