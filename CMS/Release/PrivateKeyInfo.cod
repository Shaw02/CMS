; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\?n????j\My Project\CMS\CMS\ASN1\PKCS8\PrivateKeyInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4PrivateKeyInfo@@6B@			; PrivateKeyInfo::`RTTI Complete Object Locator'
PUBLIC	??_C@_07EDADKEAH@Integer?$AA@			; `string'
PUBLIC	??_C@_0N@DHPBPBEA@Octet?5String?$AA@		; `string'
PUBLIC	??_7PrivateKeyInfo@@6B@				; PrivateKeyInfo::`vftable'
;	COMDAT ??_7PrivateKeyInfo@@6B@
CONST	SEGMENT
??_7PrivateKeyInfo@@6B@ DD FLAT:??_R4PrivateKeyInfo@@6B@ ; PrivateKeyInfo::`vftable'
	DD	FLAT:?encodeBER@Sequence@@UAEXXZ
	DD	FLAT:?Get_BERcode@ASN1@@UAEPBDXZ
	DD	FLAT:?Get_BERsize@ASN1@@UAEIXZ
CONST	ENDS
;	COMDAT ??_R4PrivateKeyInfo@@6B@
rdata$r	SEGMENT
??_R4PrivateKeyInfo@@6B@ DD 00H				; PrivateKeyInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPrivateKeyInfo@@@8
	DD	FLAT:??_R3PrivateKeyInfo@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@DHPBPBEA@Octet?5String?$AA@
CONST	SEGMENT
??_C@_0N@DHPBPBEA@Octet?5String?$AA@ DB 'Octet String', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDADKEAH@Integer?$AA@
CONST	SEGMENT
??_C@_07EDADKEAH@Integer?$AA@ DB 'Integer', 00H		; `string'
PUBLIC	??1PrivateKeyInfo@@QAE@XZ			; PrivateKeyInfo::~PrivateKeyInfo
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\pkcs8\privatekeyinfo.cpp
;	COMDAT ??1PrivateKeyInfo@@QAE@XZ
_TEXT	SEGMENT
??1PrivateKeyInfo@@QAE@XZ PROC				; PrivateKeyInfo::~PrivateKeyInfo, COMDAT
; _this$ = esi

; 25   : {

  00000	57		 push	 edi

; 26   : }

  00001	8d be 90 00 00
	00		 lea	 edi, DWORD PTR [esi+144]
  00007	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7PrivateKeyInfo@@6B@
  0000d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7OctetString@@6B@
  00013	83 7f 5c 10	 cmp	 DWORD PTR [edi+92], 16	; 00000010H
  00017	72 0c		 jb	 SHORT $LN21@PrivateKey
  00019	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$LN21@PrivateKey:
  00025	33 c0		 xor	 eax, eax
  00027	c7 47 5c 0f 00
	00 00		 mov	 DWORD PTR [edi+92], 15	; 0000000fH
  0002e	89 47 58	 mov	 DWORD PTR [edi+88], eax
  00031	88 47 48	 mov	 BYTE PTR [edi+72], al
  00034	e8 00 00 00 00	 call	 ??1ASN1@@QAE@XZ		; ASN1::~ASN1
  00039	8d 7e 44	 lea	 edi, DWORD PTR [esi+68]
  0003c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Integer@@6B@
  00042	e8 00 00 00 00	 call	 ??1ASN1@@QAE@XZ		; ASN1::~ASN1
  00047	8b fe		 mov	 edi, esi
  00049	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Sequence@@6B@
  0004f	e8 00 00 00 00	 call	 ??1ASN1@@QAE@XZ		; ASN1::~ASN1
  00054	5f		 pop	 edi
  00055	c3		 ret	 0
??1PrivateKeyInfo@@QAE@XZ ENDP				; PrivateKeyInfo::~PrivateKeyInfo
PUBLIC	?Set@PrivateKeyInfo@@QAEXPAVAlgorithmIdentifier@@QADI@Z ; PrivateKeyInfo::Set
; Function compile flags: /Ogtpy
;	COMDAT ?Set@PrivateKeyInfo@@QAEXPAVAlgorithmIdentifier@@QADI@Z
_TEXT	SEGMENT
$T84302 = 8						; size = 4
$T84295 = 8						; size = 4
$T84291 = 8						; size = 4
__algorithm$ = 8					; size = 4
_c$ = 12						; size = 4
_iSize$ = 16						; size = 4
?Set@PrivateKeyInfo@@QAEXPAVAlgorithmIdentifier@@QADI@Z PROC ; PrivateKeyInfo::Set, COMDAT
; _this$ = eax

; 41   : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	8b 5c 24 0c	 mov	 ebx, DWORD PTR __algorithm$[esp+4]
  00006	56		 push	 esi
  00007	8b f0		 mov	 esi, eax
  00009	57		 push	 edi

; 42   : 	//version                   Version,
; 43   : 	version.Set(0);
; 44   : 	Set_Construct(&version);

  0000a	8d 4c 24 14	 lea	 ecx, DWORD PTR $T84291[esp+12]
  0000e	8d 46 44	 lea	 eax, DWORD PTR [esi+68]
  00011	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  00014	51		 push	 ecx
  00015	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  0001f	89 44 24 18	 mov	 DWORD PTR $T84291[esp+16], eax
  00023	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 45   : 
; 46   : 	//privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,
; 47   : 	privateKeyAlgorithm = _algorithm;
; 48   : 	Set_Construct(privateKeyAlgorithm);

  00028	8d 54 24 14	 lea	 edx, DWORD PTR $T84295[esp+12]
  0002c	52		 push	 edx
  0002d	89 9e 8c 00 00
	00		 mov	 DWORD PTR [esi+140], ebx
  00033	89 5c 24 18	 mov	 DWORD PTR $T84295[esp+16], ebx
  00037	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 49   : 
; 50   : 	//privateKey                PrivateKey,
; 51   : 	privateKey.Set(c, iSize);

  0003c	8b 44 24 1c	 mov	 eax, DWORD PTR _iSize$[esp+12]
  00040	8b 4c 24 18	 mov	 ecx, DWORD PTR _c$[esp+12]
  00044	50		 push	 eax
  00045	51		 push	 ecx
  00046	8d 8e d4 00 00
	00		 lea	 ecx, DWORD PTR [esi+212]
  0004c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 52   : 	Set_Construct(&privateKey);

  00051	8d 54 24 14	 lea	 edx, DWORD PTR $T84302[esp+12]
  00055	81 c6 90 00 00
	00		 add	 esi, 144		; 00000090H
  0005b	52		 push	 edx
  0005c	89 74 24 18	 mov	 DWORD PTR $T84302[esp+16], esi
  00060	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 53   : 
; 54   : 	//attributes           [0]  IMPLICIT Attributes OPTIONAL }
; 55   : 
; 56   : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	59		 pop	 ecx
  00069	c2 0c 00	 ret	 12			; 0000000cH
?Set@PrivateKeyInfo@@QAEXPAVAlgorithmIdentifier@@QADI@Z ENDP ; PrivateKeyInfo::Set
PUBLIC	??0PrivateKeyInfo@@QAE@QBD@Z			; PrivateKeyInfo::PrivateKeyInfo
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??0PrivateKeyInfo@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PrivateKeyInfo@@QAE@QBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PrivateKeyInfo@@QAE@QBD@Z$1
__ehfuncinfo$??0PrivateKeyInfo@@QAE@QBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0PrivateKeyInfo@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\pkcs8\privatekeyinfo.cpp
xdata$x	ENDS
;	COMDAT ??0PrivateKeyInfo@@QAE@QBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0PrivateKeyInfo@@QAE@QBD@Z PROC			; PrivateKeyInfo::PrivateKeyInfo, COMDAT

; 14   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0PrivateKeyInfo@@QAE@QBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b 7c 24 1c	 mov	 edi, DWORD PTR _this$[esp+20]
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_06MPKGPFAO@PKCS?$CD8?$AA@
  0002b	57		 push	 edi
  0002c	e8 00 00 00 00	 call	 ??0ASN1@@QAE@QBD@Z	; ASN1::ASN1
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_07EDADKEAH@Integer?$AA@
  00036	8d 77 44	 lea	 esi, DWORD PTR [edi+68]
  00039	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00041	56		 push	 esi
  00042	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7PrivateKeyInfo@@6B@
  00048	e8 00 00 00 00	 call	 ??0ASN1@@QAE@QBD@Z	; ASN1::ASN1
  0004d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Integer@@6B@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DHPBPBEA@Octet?5String?$AA@
  00058	8d b7 90 00 00
	00		 lea	 esi, DWORD PTR [edi+144]
  0005e	56		 push	 esi
  0005f	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  00064	e8 00 00 00 00	 call	 ??0ASN1@@QAE@QBD@Z	; ASN1::ASN1
  00069	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7OctetString@@6B@
  0006f	c7 46 5c 0f 00
	00 00		 mov	 DWORD PTR [esi+92], 15	; 0000000fH
  00076	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  0007d	c6 46 48 00	 mov	 BYTE PTR [esi+72], 0

; 15   : }

  00081	8b c7		 mov	 eax, edi
  00083	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00087	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008e	59		 pop	 ecx
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
  00094	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PrivateKeyInfo@@QAE@QBD@Z$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1Sequence@@QAE@XZ	; Sequence::~Sequence
__unwindfunclet$??0PrivateKeyInfo@@QAE@QBD@Z$1:
  00008	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  0000b	83 c0 44	 add	 eax, 68			; 00000044H
  0000e	e9 00 00 00 00	 jmp	 ??1Integer@@QAE@XZ	; Integer::~Integer
__ehhandler$??0PrivateKeyInfo@@QAE@QBD@Z:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  0001a	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0PrivateKeyInfo@@QAE@QBD@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0PrivateKeyInfo@@QAE@QBD@Z ENDP			; PrivateKeyInfo::PrivateKeyInfo
END
