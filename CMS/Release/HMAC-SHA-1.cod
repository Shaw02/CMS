; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	i:\?n????j\My Project\CMS\CMS\ASN1\Algorithm\HMAC-SHA-1.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4HMAC_SHA1@@6B@				; HMAC_SHA1::`RTTI Complete Object Locator'
PUBLIC	??_R3HMAC_SHA1@@8				; HMAC_SHA1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2HMAC_SHA1@@8				; HMAC_SHA1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@HMAC@@8				; HMAC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3HMAC@@8					; HMAC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2HMAC@@8					; HMAC::`RTTI Base Class Array'
PUBLIC	??_R0?AVHMAC@@@8				; HMAC `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@HMAC_SHA1@@8			; HMAC_SHA1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVHMAC_SHA1@@@8				; HMAC_SHA1 `RTTI Type Descriptor'
PUBLIC	?oid@HMAC_SHA1@@2PAIA				; HMAC_SHA1::oid
PUBLIC	?oid2@HMAC_SHA1@@2PAIA				; HMAC_SHA1::oid2
PUBLIC	??_7HMAC_SHA1@@6B@				; HMAC_SHA1::`vftable'
;	COMDAT ??_7HMAC_SHA1@@6B@
CONST	SEGMENT
??_7HMAC_SHA1@@6B@ DD FLAT:??_R4HMAC_SHA1@@6B@		; HMAC_SHA1::`vftable'
	DD	FLAT:?encodeBER@Sequence@@UAEXXZ
	DD	FLAT:?Get_BERcode@ASN1@@UAEPBDXZ
	DD	FLAT:?Get_BERsize@ASN1@@UAEIXZ
CONST	ENDS
;	COMDAT ??_R4HMAC_SHA1@@6B@
rdata$r	SEGMENT
??_R4HMAC_SHA1@@6B@ DD 00H				; HMAC_SHA1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVHMAC_SHA1@@@8
	DD	FLAT:??_R3HMAC_SHA1@@8
rdata$r	ENDS
;	COMDAT ??_R3HMAC_SHA1@@8
rdata$r	SEGMENT
??_R3HMAC_SHA1@@8 DD 00H				; HMAC_SHA1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2HMAC_SHA1@@8
rdata$r	ENDS
;	COMDAT ??_R2HMAC_SHA1@@8
rdata$r	SEGMENT
??_R2HMAC_SHA1@@8 DD FLAT:??_R1A@?0A@EA@HMAC_SHA1@@8	; HMAC_SHA1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@HMAC@@8
	DD	FLAT:??_R1A@?0A@EA@AlgorithmIdentifier@@8
	DD	FLAT:??_R1A@?0A@EA@Sequence@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@HMAC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@HMAC@@8 DD FLAT:??_R0?AVHMAC@@@8		; HMAC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3HMAC@@8
rdata$r	ENDS
;	COMDAT ??_R3HMAC@@8
rdata$r	SEGMENT
??_R3HMAC@@8 DD	00H					; HMAC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2HMAC@@8
rdata$r	ENDS
;	COMDAT ??_R2HMAC@@8
rdata$r	SEGMENT
??_R2HMAC@@8 DD	FLAT:??_R1A@?0A@EA@HMAC@@8		; HMAC::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AlgorithmIdentifier@@8
	DD	FLAT:??_R1A@?0A@EA@Sequence@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVHMAC@@@8
_DATA	SEGMENT
??_R0?AVHMAC@@@8 DD FLAT:??_7type_info@@6B@		; HMAC `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVHMAC@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@HMAC_SHA1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@HMAC_SHA1@@8 DD FLAT:??_R0?AVHMAC_SHA1@@@8 ; HMAC_SHA1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3HMAC_SHA1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVHMAC_SHA1@@@8
_DATA	SEGMENT
??_R0?AVHMAC_SHA1@@@8 DD FLAT:??_7type_info@@6B@	; HMAC_SHA1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVHMAC_SHA1@@', 00H
?oid@HMAC_SHA1@@2PAIA DD 01H				; HMAC_SHA1::oid
	DD	02H
	DD	0348H
	DD	01bb8dH
	DD	02H
	DD	07H
?oid2@HMAC_SHA1@@2PAIA DD 01H				; HMAC_SHA1::oid2
	DD	03H
	DD	06H
	DD	01H
	DD	05H
	DD	05H
	DD	08H
	DD	01H
	DD	02H
PUBLIC	??1HMAC_SHA1@@QAE@XZ				; HMAC_SHA1::~HMAC_SHA1
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\algorithm\hmac-sha-1.cpp
;	COMDAT ??1HMAC_SHA1@@QAE@XZ
_TEXT	SEGMENT
??1HMAC_SHA1@@QAE@XZ PROC				; HMAC_SHA1::~HMAC_SHA1, COMDAT
; _this$ = eax

; 30   : {

  00000	56		 push	 esi
  00001	8b f0		 mov	 esi, eax
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7HMAC_SHA1@@6B@

; 31   : }

  00009	e8 00 00 00 00	 call	 ??1HMAC@@QAE@XZ		; HMAC::~HMAC
  0000e	5e		 pop	 esi
  0000f	c3		 ret	 0
??1HMAC_SHA1@@QAE@XZ ENDP				; HMAC_SHA1::~HMAC_SHA1
PUBLIC	?Set_HMAC_SHA1@HMAC_SHA1@@QAEXXZ		; HMAC_SHA1::Set_HMAC_SHA1
; Function compile flags: /Ogtpy
;	COMDAT ?Set_HMAC_SHA1@HMAC_SHA1@@QAEXXZ
_TEXT	SEGMENT
$T90089 = -4						; size = 4
$T90099 = -4						; size = 4
?Set_HMAC_SHA1@HMAC_SHA1@@QAEXXZ PROC			; HMAC_SHA1::Set_HMAC_SHA1, COMDAT
; _this$ = eax

; 41   : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f0		 mov	 esi, eax
  00004	57		 push	 edi

; 42   : 	//ASN.1‚Ì’è‹`
; 43   : 	Set();

  00005	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  00008	8b c7		 mov	 eax, edi
  0000a	e8 00 00 00 00	 call	 ?clear@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXXZ ; std::vector<ASN1 *,std::allocator<ASN1 *> >::clear
  0000f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T90089[esp+12]
  00013	8d 46 44	 lea	 eax, DWORD PTR [esi+68]
  00016	51		 push	 ecx
  00017	89 44 24 0c	 mov	 DWORD PTR $T90089[esp+16], eax
  0001b	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 44   : 	Set_Construct(&null);

  00020	8d 54 24 08	 lea	 edx, DWORD PTR $T90099[esp+12]
  00024	81 c6 a4 00 00
	00		 add	 esi, 164		; 000000a4H
  0002a	52		 push	 edx
  0002b	89 74 24 0c	 mov	 DWORD PTR $T90099[esp+16], esi
  0002f	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 45   : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	59		 pop	 ecx
  00037	c3		 ret	 0
?Set_HMAC_SHA1@HMAC_SHA1@@QAEXXZ ENDP			; HMAC_SHA1::Set_HMAC_SHA1
PUBLIC	??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z		; HMAC_SHA1::HMAC_SHA1
;	COMDAT xdata$x
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\asn1.cpp
xdata$x	SEGMENT
__unwindtable$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z$0
__ehfuncinfo$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File i:\“n•”“ÄŽj\my project\cms\cms\asn1\algorithm\hmac-sha-1.cpp
xdata$x	ENDS
;	COMDAT ??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z
_TEXT	SEGMENT
$T94017 = -16						; size = 4
$T94027 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z PROC			; HMAC_SHA1::HMAC_SHA1, COMDAT

; 17   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	53		 push	 ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c4		 xor	 eax, esp
  00019	50		 push	 eax
  0001a	8d 44 24 14	 lea	 eax, DWORD PTR __$EHRec$[esp+32]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b 74 24 24	 mov	 esi, DWORD PTR _this$[esp+28]
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GENPDEDH@HMAC?9SHA?91?$AA@
  0002d	68 00 00 00 00	 push	 OFFSET ?cSHA1@PKCS7@@2VSHA1@@A ; PKCS7::cSHA1
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 ??0HMAC@@QAE@PAVDigest@@QBD@Z ; HMAC::HMAC

; 18   : 	Set_oid(oid,sizeof(oid)/sizeof(int));

  00038	6a 06		 push	 6
  0003a	8d 5e 44	 lea	 ebx, DWORD PTR [esi+68]
  0003d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 0
  00045	68 00 00 00 00	 push	 OFFSET ?oid@HMAC_SHA1@@2PAIA ; HMAC_SHA1::oid
  0004a	8b c3		 mov	 eax, ebx
  0004c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7HMAC_SHA1@@6B@
  00052	e8 00 00 00 00	 call	 ?Set@ObjectIdentifier@@QAEXQAII@Z ; ObjectIdentifier::Set

; 19   : 	Set_HMAC_SHA1();

  00057	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  0005a	8b c7		 mov	 eax, edi
  0005c	e8 00 00 00 00	 call	 ?clear@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXXZ ; std::vector<ASN1 *,std::allocator<ASN1 *> >::clear
  00061	8d 44 24 10	 lea	 eax, DWORD PTR $T94017[esp+32]
  00065	50		 push	 eax
  00066	89 5c 24 14	 mov	 DWORD PTR $T94017[esp+36], ebx
  0006a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back
  0006f	8d 54 24 10	 lea	 edx, DWORD PTR $T94027[esp+32]
  00073	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  00079	52		 push	 edx
  0007a	89 4c 24 14	 mov	 DWORD PTR $T94027[esp+36], ecx
  0007e	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVASN1@@V?$allocator@PAVASN1@@@std@@@std@@QAEXABQAVASN1@@@Z ; std::vector<ASN1 *,std::allocator<ASN1 *> >::push_back

; 20   : }

  00083	8b c6		 mov	 eax, esi
  00085	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	83 c4 10	 add	 esp, 16			; 00000010H
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z$0:
  00000	8b 75 04	 mov	 esi, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1HMAC@@QAE@XZ		; HMAC::~HMAC
__ehhandler$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0HMAC_SHA1@@QAE@PAVSHA1@@QBD@Z ENDP			; HMAC_SHA1::HMAC_SHA1
END
